import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * API error response model.
 */
export type APIError = {
    /**
     * The error message.
     */
    msg: string;
};
/** @internal */
export declare const APIError$inboundSchema: z.ZodType<APIError, z.ZodTypeDef, unknown>;
/** @internal */
export type APIError$Outbound = {
    msg: string;
};
/** @internal */
export declare const APIError$outboundSchema: z.ZodType<APIError$Outbound, z.ZodTypeDef, APIError>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace APIError$ {
    /** @deprecated use `APIError$inboundSchema` instead. */
    const inboundSchema: z.ZodType<APIError, z.ZodTypeDef, unknown>;
    /** @deprecated use `APIError$outboundSchema` instead. */
    const outboundSchema: z.ZodType<APIError$Outbound, z.ZodTypeDef, APIError>;
    /** @deprecated use `APIError$Outbound` instead. */
    type Outbound = APIError$Outbound;
}
export declare function apiErrorToJSON(apiError: APIError): string;
export declare function apiErrorFromJSON(jsonString: string): SafeParseResult<APIError, SDKValidationError>;
//# sourceMappingURL=apierror.d.ts.map