import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { InputCreatorId, InputCreatorId$Outbound } from "./inputcreatorid.js";
import { PlaybackPolicy, PlaybackPolicy$Outbound } from "./playbackpolicy.js";
import { Storage, Storage$Outbound } from "./storage.js";
export type AssetPatchPayload = {
    /**
     * The name of the asset. This is not necessarily the filename - it can be a custom name or title.
     *
     * @remarks
     */
    name?: string | undefined;
    creatorId?: InputCreatorId | undefined;
    /**
     * Whether the playback policy for an asset or stream is public or signed
     */
    playbackPolicy?: PlaybackPolicy | null | undefined;
    storage?: Storage | undefined;
};
/** @internal */
export declare const AssetPatchPayload$inboundSchema: z.ZodType<AssetPatchPayload, z.ZodTypeDef, unknown>;
/** @internal */
export type AssetPatchPayload$Outbound = {
    name?: string | undefined;
    creatorId?: InputCreatorId$Outbound | undefined;
    playbackPolicy?: PlaybackPolicy$Outbound | null | undefined;
    storage?: Storage$Outbound | undefined;
};
/** @internal */
export declare const AssetPatchPayload$outboundSchema: z.ZodType<AssetPatchPayload$Outbound, z.ZodTypeDef, AssetPatchPayload>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace AssetPatchPayload$ {
    /** @deprecated use `AssetPatchPayload$inboundSchema` instead. */
    const inboundSchema: z.ZodType<AssetPatchPayload, z.ZodTypeDef, unknown>;
    /** @deprecated use `AssetPatchPayload$outboundSchema` instead. */
    const outboundSchema: z.ZodType<AssetPatchPayload$Outbound, z.ZodTypeDef, AssetPatchPayload>;
    /** @deprecated use `AssetPatchPayload$Outbound` instead. */
    type Outbound = AssetPatchPayload$Outbound;
}
export declare function assetPatchPayloadToJSON(assetPatchPayload: AssetPatchPayload): string;
export declare function assetPatchPayloadFromJSON(jsonString: string): SafeParseResult<AssetPatchPayload, SDKValidationError>;
//# sourceMappingURL=assetpatchpayload.d.ts.map