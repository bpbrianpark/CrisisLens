import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type BodyGenImageToVideoImage = {
    fileName: string;
    content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};
export type BodyGenImageToVideo = {
    /**
     * Uploaded image to generate a video from.
     */
    image: BodyGenImageToVideoImage | Blob;
    /**
     * The frames per second of the generated video.
     */
    fps?: number | undefined;
    /**
     * The height in pixels of the generated video.
     */
    height?: number | undefined;
    /**
     * Hugging Face model ID used for video generation.
     */
    modelId?: string | undefined;
    /**
     * Used for conditioning the amount of motion for the generation. The higher the number the more motion will be in the video.
     */
    motionBucketId?: number | undefined;
    /**
     * Amount of noise added to the conditioning image. Higher values reduce resemblance to the conditioning image and increase motion.
     */
    noiseAugStrength?: number | undefined;
    /**
     * Number of denoising steps. More steps usually lead to higher quality images but slower inference. Modulated by strength.
     */
    numInferenceSteps?: number | undefined;
    /**
     * Perform a safety check to estimate if generated images could be offensive or harmful.
     */
    safetyCheck?: boolean | undefined;
    /**
     * Seed for random number generation.
     */
    seed?: number | undefined;
    /**
     * The width in pixels of the generated video.
     */
    width?: number | undefined;
};
/** @internal */
export declare const BodyGenImageToVideoImage$inboundSchema: z.ZodType<BodyGenImageToVideoImage, z.ZodTypeDef, unknown>;
/** @internal */
export type BodyGenImageToVideoImage$Outbound = {
    fileName: string;
    content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};
/** @internal */
export declare const BodyGenImageToVideoImage$outboundSchema: z.ZodType<BodyGenImageToVideoImage$Outbound, z.ZodTypeDef, BodyGenImageToVideoImage>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BodyGenImageToVideoImage$ {
    /** @deprecated use `BodyGenImageToVideoImage$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BodyGenImageToVideoImage, z.ZodTypeDef, unknown>;
    /** @deprecated use `BodyGenImageToVideoImage$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BodyGenImageToVideoImage$Outbound, z.ZodTypeDef, BodyGenImageToVideoImage>;
    /** @deprecated use `BodyGenImageToVideoImage$Outbound` instead. */
    type Outbound = BodyGenImageToVideoImage$Outbound;
}
export declare function bodyGenImageToVideoImageToJSON(bodyGenImageToVideoImage: BodyGenImageToVideoImage): string;
export declare function bodyGenImageToVideoImageFromJSON(jsonString: string): SafeParseResult<BodyGenImageToVideoImage, SDKValidationError>;
/** @internal */
export declare const BodyGenImageToVideo$inboundSchema: z.ZodType<BodyGenImageToVideo, z.ZodTypeDef, unknown>;
/** @internal */
export type BodyGenImageToVideo$Outbound = {
    image: BodyGenImageToVideoImage$Outbound | Blob;
    fps: number;
    height: number;
    model_id: string;
    motion_bucket_id: number;
    noise_aug_strength: number;
    num_inference_steps: number;
    safety_check: boolean;
    seed?: number | undefined;
    width: number;
};
/** @internal */
export declare const BodyGenImageToVideo$outboundSchema: z.ZodType<BodyGenImageToVideo$Outbound, z.ZodTypeDef, BodyGenImageToVideo>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BodyGenImageToVideo$ {
    /** @deprecated use `BodyGenImageToVideo$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BodyGenImageToVideo, z.ZodTypeDef, unknown>;
    /** @deprecated use `BodyGenImageToVideo$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BodyGenImageToVideo$Outbound, z.ZodTypeDef, BodyGenImageToVideo>;
    /** @deprecated use `BodyGenImageToVideo$Outbound` instead. */
    type Outbound = BodyGenImageToVideo$Outbound;
}
export declare function bodyGenImageToVideoToJSON(bodyGenImageToVideo: BodyGenImageToVideo): string;
export declare function bodyGenImageToVideoFromJSON(jsonString: string): SafeParseResult<BodyGenImageToVideo, SDKValidationError>;
//# sourceMappingURL=bodygenimagetovideo.d.ts.map