import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type BodyGenUpscaleImage = {
    fileName: string;
    content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};
export type BodyGenUpscale = {
    /**
     * Uploaded image to modify with the pipeline.
     */
    image: BodyGenUpscaleImage | Blob;
    /**
     * Text prompt(s) to guide upscaled image generation.
     */
    prompt: string;
    /**
     * Hugging Face model ID used for upscaled image generation.
     */
    modelId?: string | undefined;
    /**
     * Number of denoising steps. More steps usually lead to higher quality images but slower inference. Modulated by strength.
     */
    numInferenceSteps?: number | undefined;
    /**
     * Perform a safety check to estimate if generated images could be offensive or harmful.
     */
    safetyCheck?: boolean | undefined;
    /**
     * Seed for random number generation.
     */
    seed?: number | undefined;
};
/** @internal */
export declare const BodyGenUpscaleImage$inboundSchema: z.ZodType<BodyGenUpscaleImage, z.ZodTypeDef, unknown>;
/** @internal */
export type BodyGenUpscaleImage$Outbound = {
    fileName: string;
    content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};
/** @internal */
export declare const BodyGenUpscaleImage$outboundSchema: z.ZodType<BodyGenUpscaleImage$Outbound, z.ZodTypeDef, BodyGenUpscaleImage>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BodyGenUpscaleImage$ {
    /** @deprecated use `BodyGenUpscaleImage$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BodyGenUpscaleImage, z.ZodTypeDef, unknown>;
    /** @deprecated use `BodyGenUpscaleImage$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BodyGenUpscaleImage$Outbound, z.ZodTypeDef, BodyGenUpscaleImage>;
    /** @deprecated use `BodyGenUpscaleImage$Outbound` instead. */
    type Outbound = BodyGenUpscaleImage$Outbound;
}
export declare function bodyGenUpscaleImageToJSON(bodyGenUpscaleImage: BodyGenUpscaleImage): string;
export declare function bodyGenUpscaleImageFromJSON(jsonString: string): SafeParseResult<BodyGenUpscaleImage, SDKValidationError>;
/** @internal */
export declare const BodyGenUpscale$inboundSchema: z.ZodType<BodyGenUpscale, z.ZodTypeDef, unknown>;
/** @internal */
export type BodyGenUpscale$Outbound = {
    image: BodyGenUpscaleImage$Outbound | Blob;
    prompt: string;
    model_id: string;
    num_inference_steps: number;
    safety_check: boolean;
    seed?: number | undefined;
};
/** @internal */
export declare const BodyGenUpscale$outboundSchema: z.ZodType<BodyGenUpscale$Outbound, z.ZodTypeDef, BodyGenUpscale>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BodyGenUpscale$ {
    /** @deprecated use `BodyGenUpscale$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BodyGenUpscale, z.ZodTypeDef, unknown>;
    /** @deprecated use `BodyGenUpscale$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BodyGenUpscale$Outbound, z.ZodTypeDef, BodyGenUpscale>;
    /** @deprecated use `BodyGenUpscale$Outbound` instead. */
    type Outbound = BodyGenUpscale$Outbound;
}
export declare function bodyGenUpscaleToJSON(bodyGenUpscale: BodyGenUpscale): string;
export declare function bodyGenUpscaleFromJSON(jsonString: string): SafeParseResult<BodyGenUpscale, SDKValidationError>;
//# sourceMappingURL=bodygenupscale.d.ts.map