"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreatorId$ = exports.CreatorId$outboundSchema = exports.CreatorId$inboundSchema = exports.CreatorId1$ = exports.CreatorId1$outboundSchema = exports.CreatorId1$inboundSchema = exports.CreatorIdType$ = exports.CreatorIdType$outboundSchema = exports.CreatorIdType$inboundSchema = exports.CreatorIdType = void 0;
exports.creatorId1ToJSON = creatorId1ToJSON;
exports.creatorId1FromJSON = creatorId1FromJSON;
exports.creatorIdToJSON = creatorIdToJSON;
exports.creatorIdFromJSON = creatorIdFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
var CreatorIdType;
(function (CreatorIdType) {
    CreatorIdType["Unverified"] = "unverified";
})(CreatorIdType || (exports.CreatorIdType = CreatorIdType = {}));
/** @internal */
exports.CreatorIdType$inboundSchema = z.nativeEnum(CreatorIdType);
/** @internal */
exports.CreatorIdType$outboundSchema = exports.CreatorIdType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreatorIdType$;
(function (CreatorIdType$) {
    /** @deprecated use `CreatorIdType$inboundSchema` instead. */
    CreatorIdType$.inboundSchema = exports.CreatorIdType$inboundSchema;
    /** @deprecated use `CreatorIdType$outboundSchema` instead. */
    CreatorIdType$.outboundSchema = exports.CreatorIdType$outboundSchema;
})(CreatorIdType$ || (exports.CreatorIdType$ = CreatorIdType$ = {}));
/** @internal */
exports.CreatorId1$inboundSchema = z.object({
    type: exports.CreatorIdType$inboundSchema,
    value: z.string(),
});
/** @internal */
exports.CreatorId1$outboundSchema = z.object({
    type: exports.CreatorIdType$outboundSchema,
    value: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreatorId1$;
(function (CreatorId1$) {
    /** @deprecated use `CreatorId1$inboundSchema` instead. */
    CreatorId1$.inboundSchema = exports.CreatorId1$inboundSchema;
    /** @deprecated use `CreatorId1$outboundSchema` instead. */
    CreatorId1$.outboundSchema = exports.CreatorId1$outboundSchema;
})(CreatorId1$ || (exports.CreatorId1$ = CreatorId1$ = {}));
function creatorId1ToJSON(creatorId1) {
    return JSON.stringify(exports.CreatorId1$outboundSchema.parse(creatorId1));
}
function creatorId1FromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreatorId1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreatorId1' from JSON`);
}
/** @internal */
exports.CreatorId$inboundSchema = z.lazy(() => exports.CreatorId1$inboundSchema);
/** @internal */
exports.CreatorId$outboundSchema = z.lazy(() => exports.CreatorId1$outboundSchema);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreatorId$;
(function (CreatorId$) {
    /** @deprecated use `CreatorId$inboundSchema` instead. */
    CreatorId$.inboundSchema = exports.CreatorId$inboundSchema;
    /** @deprecated use `CreatorId$outboundSchema` instead. */
    CreatorId$.outboundSchema = exports.CreatorId$outboundSchema;
})(CreatorId$ || (exports.CreatorId$ = CreatorId$ = {}));
function creatorIdToJSON(creatorId) {
    return JSON.stringify(exports.CreatorId$outboundSchema.parse(creatorId));
}
function creatorIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreatorId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreatorId' from JSON`);
}
//# sourceMappingURL=creatorid.js.map