import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { IpfsExportParams, IpfsExportParams$Outbound } from "./ipfsexportparams.js";
export type ExportTaskParams2 = {
    ipfs: IpfsExportParams;
};
/**
 * custom URL parameters for the export task
 */
export type Custom = {
    /**
     * URL where to export the asset
     */
    url: string;
    /**
     * Method to use on the export request
     */
    method?: string | undefined;
    /**
     * Headers to add to the export request
     */
    headers?: {
        [k: string]: string;
    } | undefined;
};
export type ExportTaskParams1 = {
    /**
     * custom URL parameters for the export task
     */
    custom: Custom;
};
/**
 * Parameters for the export task
 */
export type ExportTaskParams = ExportTaskParams1 | ExportTaskParams2;
/** @internal */
export declare const ExportTaskParams2$inboundSchema: z.ZodType<ExportTaskParams2, z.ZodTypeDef, unknown>;
/** @internal */
export type ExportTaskParams2$Outbound = {
    ipfs: IpfsExportParams$Outbound;
};
/** @internal */
export declare const ExportTaskParams2$outboundSchema: z.ZodType<ExportTaskParams2$Outbound, z.ZodTypeDef, ExportTaskParams2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExportTaskParams2$ {
    /** @deprecated use `ExportTaskParams2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExportTaskParams2, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExportTaskParams2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExportTaskParams2$Outbound, z.ZodTypeDef, ExportTaskParams2>;
    /** @deprecated use `ExportTaskParams2$Outbound` instead. */
    type Outbound = ExportTaskParams2$Outbound;
}
export declare function exportTaskParams2ToJSON(exportTaskParams2: ExportTaskParams2): string;
export declare function exportTaskParams2FromJSON(jsonString: string): SafeParseResult<ExportTaskParams2, SDKValidationError>;
/** @internal */
export declare const Custom$inboundSchema: z.ZodType<Custom, z.ZodTypeDef, unknown>;
/** @internal */
export type Custom$Outbound = {
    url: string;
    method: string;
    headers?: {
        [k: string]: string;
    } | undefined;
};
/** @internal */
export declare const Custom$outboundSchema: z.ZodType<Custom$Outbound, z.ZodTypeDef, Custom>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Custom$ {
    /** @deprecated use `Custom$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Custom, z.ZodTypeDef, unknown>;
    /** @deprecated use `Custom$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Custom$Outbound, z.ZodTypeDef, Custom>;
    /** @deprecated use `Custom$Outbound` instead. */
    type Outbound = Custom$Outbound;
}
export declare function customToJSON(custom: Custom): string;
export declare function customFromJSON(jsonString: string): SafeParseResult<Custom, SDKValidationError>;
/** @internal */
export declare const ExportTaskParams1$inboundSchema: z.ZodType<ExportTaskParams1, z.ZodTypeDef, unknown>;
/** @internal */
export type ExportTaskParams1$Outbound = {
    custom: Custom$Outbound;
};
/** @internal */
export declare const ExportTaskParams1$outboundSchema: z.ZodType<ExportTaskParams1$Outbound, z.ZodTypeDef, ExportTaskParams1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExportTaskParams1$ {
    /** @deprecated use `ExportTaskParams1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExportTaskParams1, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExportTaskParams1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExportTaskParams1$Outbound, z.ZodTypeDef, ExportTaskParams1>;
    /** @deprecated use `ExportTaskParams1$Outbound` instead. */
    type Outbound = ExportTaskParams1$Outbound;
}
export declare function exportTaskParams1ToJSON(exportTaskParams1: ExportTaskParams1): string;
export declare function exportTaskParams1FromJSON(jsonString: string): SafeParseResult<ExportTaskParams1, SDKValidationError>;
/** @internal */
export declare const ExportTaskParams$inboundSchema: z.ZodType<ExportTaskParams, z.ZodTypeDef, unknown>;
/** @internal */
export type ExportTaskParams$Outbound = ExportTaskParams1$Outbound | ExportTaskParams2$Outbound;
/** @internal */
export declare const ExportTaskParams$outboundSchema: z.ZodType<ExportTaskParams$Outbound, z.ZodTypeDef, ExportTaskParams>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExportTaskParams$ {
    /** @deprecated use `ExportTaskParams$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExportTaskParams, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExportTaskParams$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExportTaskParams$Outbound, z.ZodTypeDef, ExportTaskParams>;
    /** @deprecated use `ExportTaskParams$Outbound` instead. */
    type Outbound = ExportTaskParams$Outbound;
}
export declare function exportTaskParamsToJSON(exportTaskParams: ExportTaskParams): string;
export declare function exportTaskParamsFromJSON(jsonString: string): SafeParseResult<ExportTaskParams, SDKValidationError>;
//# sourceMappingURL=exporttaskparams.d.ts.map