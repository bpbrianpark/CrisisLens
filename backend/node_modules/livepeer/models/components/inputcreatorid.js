"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InputCreatorId$ = exports.InputCreatorId$outboundSchema = exports.InputCreatorId$inboundSchema = exports.InputCreatorId1$ = exports.InputCreatorId1$outboundSchema = exports.InputCreatorId1$inboundSchema = exports.InputCreatorIdType$ = exports.InputCreatorIdType$outboundSchema = exports.InputCreatorIdType$inboundSchema = exports.InputCreatorIdType = void 0;
exports.inputCreatorId1ToJSON = inputCreatorId1ToJSON;
exports.inputCreatorId1FromJSON = inputCreatorId1FromJSON;
exports.inputCreatorIdToJSON = inputCreatorIdToJSON;
exports.inputCreatorIdFromJSON = inputCreatorIdFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
var InputCreatorIdType;
(function (InputCreatorIdType) {
    InputCreatorIdType["Unverified"] = "unverified";
})(InputCreatorIdType || (exports.InputCreatorIdType = InputCreatorIdType = {}));
/** @internal */
exports.InputCreatorIdType$inboundSchema = z.nativeEnum(InputCreatorIdType);
/** @internal */
exports.InputCreatorIdType$outboundSchema = exports.InputCreatorIdType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InputCreatorIdType$;
(function (InputCreatorIdType$) {
    /** @deprecated use `InputCreatorIdType$inboundSchema` instead. */
    InputCreatorIdType$.inboundSchema = exports.InputCreatorIdType$inboundSchema;
    /** @deprecated use `InputCreatorIdType$outboundSchema` instead. */
    InputCreatorIdType$.outboundSchema = exports.InputCreatorIdType$outboundSchema;
})(InputCreatorIdType$ || (exports.InputCreatorIdType$ = InputCreatorIdType$ = {}));
/** @internal */
exports.InputCreatorId1$inboundSchema = z.object({
    type: exports.InputCreatorIdType$inboundSchema,
    value: z.string(),
});
/** @internal */
exports.InputCreatorId1$outboundSchema = z.object({
    type: exports.InputCreatorIdType$outboundSchema,
    value: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InputCreatorId1$;
(function (InputCreatorId1$) {
    /** @deprecated use `InputCreatorId1$inboundSchema` instead. */
    InputCreatorId1$.inboundSchema = exports.InputCreatorId1$inboundSchema;
    /** @deprecated use `InputCreatorId1$outboundSchema` instead. */
    InputCreatorId1$.outboundSchema = exports.InputCreatorId1$outboundSchema;
})(InputCreatorId1$ || (exports.InputCreatorId1$ = InputCreatorId1$ = {}));
function inputCreatorId1ToJSON(inputCreatorId1) {
    return JSON.stringify(exports.InputCreatorId1$outboundSchema.parse(inputCreatorId1));
}
function inputCreatorId1FromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.InputCreatorId1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InputCreatorId1' from JSON`);
}
/** @internal */
exports.InputCreatorId$inboundSchema = z.union([z.lazy(() => exports.InputCreatorId1$inboundSchema), z.string()]);
/** @internal */
exports.InputCreatorId$outboundSchema = z.union([z.lazy(() => exports.InputCreatorId1$outboundSchema), z.string()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InputCreatorId$;
(function (InputCreatorId$) {
    /** @deprecated use `InputCreatorId$inboundSchema` instead. */
    InputCreatorId$.inboundSchema = exports.InputCreatorId$inboundSchema;
    /** @deprecated use `InputCreatorId$outboundSchema` instead. */
    InputCreatorId$.outboundSchema = exports.InputCreatorId$outboundSchema;
})(InputCreatorId$ || (exports.InputCreatorId$ = InputCreatorId$ = {}));
function inputCreatorIdToJSON(inputCreatorId) {
    return JSON.stringify(exports.InputCreatorId$outboundSchema.parse(inputCreatorId));
}
function inputCreatorIdFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.InputCreatorId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InputCreatorId' from JSON`);
}
//# sourceMappingURL=inputcreatorid.js.map