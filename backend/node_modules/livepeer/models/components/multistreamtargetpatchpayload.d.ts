import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type MultistreamTargetPatchPayload = {
    name?: string | undefined;
    /**
     * Livepeer-compatible multistream target URL (RTMP(S) or SRT)
     */
    url: string;
    /**
     * If true then this multistream target will not be used for pushing
     *
     * @remarks
     * even if it is configured in a stream object.
     */
    disabled?: boolean | undefined;
};
/** @internal */
export declare const MultistreamTargetPatchPayload$inboundSchema: z.ZodType<MultistreamTargetPatchPayload, z.ZodTypeDef, unknown>;
/** @internal */
export type MultistreamTargetPatchPayload$Outbound = {
    name?: string | undefined;
    url: string;
    disabled?: boolean | undefined;
};
/** @internal */
export declare const MultistreamTargetPatchPayload$outboundSchema: z.ZodType<MultistreamTargetPatchPayload$Outbound, z.ZodTypeDef, MultistreamTargetPatchPayload>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace MultistreamTargetPatchPayload$ {
    /** @deprecated use `MultistreamTargetPatchPayload$inboundSchema` instead. */
    const inboundSchema: z.ZodType<MultistreamTargetPatchPayload, z.ZodTypeDef, unknown>;
    /** @deprecated use `MultistreamTargetPatchPayload$outboundSchema` instead. */
    const outboundSchema: z.ZodType<MultistreamTargetPatchPayload$Outbound, z.ZodTypeDef, MultistreamTargetPatchPayload>;
    /** @deprecated use `MultistreamTargetPatchPayload$Outbound` instead. */
    type Outbound = MultistreamTargetPatchPayload$Outbound;
}
export declare function multistreamTargetPatchPayloadToJSON(multistreamTargetPatchPayload: MultistreamTargetPatchPayload): string;
export declare function multistreamTargetPatchPayloadFromJSON(jsonString: string): SafeParseResult<MultistreamTargetPatchPayload, SDKValidationError>;
//# sourceMappingURL=multistreamtargetpatchpayload.d.ts.map