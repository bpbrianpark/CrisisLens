"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NewAssetPayload$ = exports.NewAssetPayload$outboundSchema = exports.NewAssetPayload$inboundSchema = exports.NewAssetPayloadEncryption$ = exports.NewAssetPayloadEncryption$outboundSchema = exports.NewAssetPayloadEncryption$inboundSchema = exports.NewAssetPayloadStorage$ = exports.NewAssetPayloadStorage$outboundSchema = exports.NewAssetPayloadStorage$inboundSchema = exports.NewAssetPayloadIpfs$ = exports.NewAssetPayloadIpfs$outboundSchema = exports.NewAssetPayloadIpfs$inboundSchema = exports.NewAssetPayload1$ = exports.NewAssetPayload1$outboundSchema = exports.NewAssetPayload1$inboundSchema = void 0;
exports.newAssetPayload1ToJSON = newAssetPayload1ToJSON;
exports.newAssetPayload1FromJSON = newAssetPayload1FromJSON;
exports.newAssetPayloadIpfsToJSON = newAssetPayloadIpfsToJSON;
exports.newAssetPayloadIpfsFromJSON = newAssetPayloadIpfsFromJSON;
exports.newAssetPayloadStorageToJSON = newAssetPayloadStorageToJSON;
exports.newAssetPayloadStorageFromJSON = newAssetPayloadStorageFromJSON;
exports.newAssetPayloadEncryptionToJSON = newAssetPayloadEncryptionToJSON;
exports.newAssetPayloadEncryptionFromJSON = newAssetPayloadEncryptionFromJSON;
exports.newAssetPayloadToJSON = newAssetPayloadToJSON;
exports.newAssetPayloadFromJSON = newAssetPayloadFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const inputcreatorid_js_1 = require("./inputcreatorid.js");
const playbackpolicy_js_1 = require("./playbackpolicy.js");
const spec_js_1 = require("./spec.js");
const transcodeprofile_js_1 = require("./transcodeprofile.js");
/** @internal */
exports.NewAssetPayload1$inboundSchema = z.object({
    spec: z.nullable(spec_js_1.Spec$inboundSchema).optional(),
});
/** @internal */
exports.NewAssetPayload1$outboundSchema = z.object({
    spec: z.nullable(spec_js_1.Spec$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NewAssetPayload1$;
(function (NewAssetPayload1$) {
    /** @deprecated use `NewAssetPayload1$inboundSchema` instead. */
    NewAssetPayload1$.inboundSchema = exports.NewAssetPayload1$inboundSchema;
    /** @deprecated use `NewAssetPayload1$outboundSchema` instead. */
    NewAssetPayload1$.outboundSchema = exports.NewAssetPayload1$outboundSchema;
})(NewAssetPayload1$ || (exports.NewAssetPayload1$ = NewAssetPayload1$ = {}));
function newAssetPayload1ToJSON(newAssetPayload1) {
    return JSON.stringify(exports.NewAssetPayload1$outboundSchema.parse(newAssetPayload1));
}
function newAssetPayload1FromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.NewAssetPayload1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NewAssetPayload1' from JSON`);
}
/** @internal */
exports.NewAssetPayloadIpfs$inboundSchema = z.union([z.lazy(() => exports.NewAssetPayload1$inboundSchema), z.boolean()]);
/** @internal */
exports.NewAssetPayloadIpfs$outboundSchema = z.union([z.lazy(() => exports.NewAssetPayload1$outboundSchema), z.boolean()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NewAssetPayloadIpfs$;
(function (NewAssetPayloadIpfs$) {
    /** @deprecated use `NewAssetPayloadIpfs$inboundSchema` instead. */
    NewAssetPayloadIpfs$.inboundSchema = exports.NewAssetPayloadIpfs$inboundSchema;
    /** @deprecated use `NewAssetPayloadIpfs$outboundSchema` instead. */
    NewAssetPayloadIpfs$.outboundSchema = exports.NewAssetPayloadIpfs$outboundSchema;
})(NewAssetPayloadIpfs$ || (exports.NewAssetPayloadIpfs$ = NewAssetPayloadIpfs$ = {}));
function newAssetPayloadIpfsToJSON(newAssetPayloadIpfs) {
    return JSON.stringify(exports.NewAssetPayloadIpfs$outboundSchema.parse(newAssetPayloadIpfs));
}
function newAssetPayloadIpfsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.NewAssetPayloadIpfs$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NewAssetPayloadIpfs' from JSON`);
}
/** @internal */
exports.NewAssetPayloadStorage$inboundSchema = z.object({
    ipfs: z.nullable(z.union([z.lazy(() => exports.NewAssetPayload1$inboundSchema), z.boolean()])).optional(),
});
/** @internal */
exports.NewAssetPayloadStorage$outboundSchema = z.object({
    ipfs: z.nullable(z.union([z.lazy(() => exports.NewAssetPayload1$outboundSchema), z.boolean()])).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NewAssetPayloadStorage$;
(function (NewAssetPayloadStorage$) {
    /** @deprecated use `NewAssetPayloadStorage$inboundSchema` instead. */
    NewAssetPayloadStorage$.inboundSchema = exports.NewAssetPayloadStorage$inboundSchema;
    /** @deprecated use `NewAssetPayloadStorage$outboundSchema` instead. */
    NewAssetPayloadStorage$.outboundSchema = exports.NewAssetPayloadStorage$outboundSchema;
})(NewAssetPayloadStorage$ || (exports.NewAssetPayloadStorage$ = NewAssetPayloadStorage$ = {}));
function newAssetPayloadStorageToJSON(newAssetPayloadStorage) {
    return JSON.stringify(exports.NewAssetPayloadStorage$outboundSchema.parse(newAssetPayloadStorage));
}
function newAssetPayloadStorageFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.NewAssetPayloadStorage$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NewAssetPayloadStorage' from JSON`);
}
/** @internal */
exports.NewAssetPayloadEncryption$inboundSchema = z.object({
    encryptedKey: z.string(),
});
/** @internal */
exports.NewAssetPayloadEncryption$outboundSchema = z.object({
    encryptedKey: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NewAssetPayloadEncryption$;
(function (NewAssetPayloadEncryption$) {
    /** @deprecated use `NewAssetPayloadEncryption$inboundSchema` instead. */
    NewAssetPayloadEncryption$.inboundSchema = exports.NewAssetPayloadEncryption$inboundSchema;
    /** @deprecated use `NewAssetPayloadEncryption$outboundSchema` instead. */
    NewAssetPayloadEncryption$.outboundSchema = exports.NewAssetPayloadEncryption$outboundSchema;
})(NewAssetPayloadEncryption$ || (exports.NewAssetPayloadEncryption$ = NewAssetPayloadEncryption$ = {}));
function newAssetPayloadEncryptionToJSON(newAssetPayloadEncryption) {
    return JSON.stringify(exports.NewAssetPayloadEncryption$outboundSchema.parse(newAssetPayloadEncryption));
}
function newAssetPayloadEncryptionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.NewAssetPayloadEncryption$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NewAssetPayloadEncryption' from JSON`);
}
/** @internal */
exports.NewAssetPayload$inboundSchema = z.object({
    name: z.string(),
    staticMp4: z.boolean().optional(),
    playbackPolicy: z.nullable(playbackpolicy_js_1.PlaybackPolicy$inboundSchema).optional(),
    creatorId: inputcreatorid_js_1.InputCreatorId$inboundSchema.optional(),
    storage: z.lazy(() => exports.NewAssetPayloadStorage$inboundSchema).optional(),
    encryption: z.lazy(() => exports.NewAssetPayloadEncryption$inboundSchema).optional(),
    c2pa: z.boolean().optional(),
    profiles: z.nullable(z.array(transcodeprofile_js_1.TranscodeProfile$inboundSchema)).optional(),
    targetSegmentSizeSecs: z.number().optional(),
});
/** @internal */
exports.NewAssetPayload$outboundSchema = z.object({
    name: z.string(),
    staticMp4: z.boolean().optional(),
    playbackPolicy: z.nullable(playbackpolicy_js_1.PlaybackPolicy$outboundSchema).optional(),
    creatorId: inputcreatorid_js_1.InputCreatorId$outboundSchema.optional(),
    storage: z.lazy(() => exports.NewAssetPayloadStorage$outboundSchema).optional(),
    encryption: z.lazy(() => exports.NewAssetPayloadEncryption$outboundSchema).optional(),
    c2pa: z.boolean().optional(),
    profiles: z.nullable(z.array(transcodeprofile_js_1.TranscodeProfile$outboundSchema)).optional(),
    targetSegmentSizeSecs: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NewAssetPayload$;
(function (NewAssetPayload$) {
    /** @deprecated use `NewAssetPayload$inboundSchema` instead. */
    NewAssetPayload$.inboundSchema = exports.NewAssetPayload$inboundSchema;
    /** @deprecated use `NewAssetPayload$outboundSchema` instead. */
    NewAssetPayload$.outboundSchema = exports.NewAssetPayload$outboundSchema;
})(NewAssetPayload$ || (exports.NewAssetPayload$ = NewAssetPayload$ = {}));
function newAssetPayloadToJSON(newAssetPayload) {
    return JSON.stringify(exports.NewAssetPayload$outboundSchema.parse(newAssetPayload));
}
function newAssetPayloadFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.NewAssetPayload$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NewAssetPayload' from JSON`);
}
//# sourceMappingURL=newassetpayload.js.map