import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export declare enum TranscodeProfileProfile {
    H264Baseline = "H264Baseline",
    H264Main = "H264Main",
    H264High = "H264High",
    H264ConstrainedHigh = "H264ConstrainedHigh"
}
export declare enum TranscodeProfileEncoder {
    H264 = "H.264",
    Hevc = "HEVC",
    Vp8 = "VP8",
    Vp9 = "VP9"
}
/**
 * Transcode API profile
 */
export type TranscodeProfile = {
    width?: number | undefined;
    name?: string | undefined;
    height?: number | undefined;
    bitrate: number;
    /**
     * Restricts the size of the output video using the constant quality feature. Increasing this value will result in a lower quality video. Note that this parameter might not work if the transcoder lacks support for it.
     *
     * @remarks
     */
    quality?: number | undefined;
    fps?: number | undefined;
    fpsDen?: number | undefined;
    gop?: string | undefined;
    profile?: TranscodeProfileProfile | undefined;
    encoder?: TranscodeProfileEncoder | undefined;
};
/** @internal */
export declare const TranscodeProfileProfile$inboundSchema: z.ZodNativeEnum<typeof TranscodeProfileProfile>;
/** @internal */
export declare const TranscodeProfileProfile$outboundSchema: z.ZodNativeEnum<typeof TranscodeProfileProfile>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TranscodeProfileProfile$ {
    /** @deprecated use `TranscodeProfileProfile$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<typeof TranscodeProfileProfile>;
    /** @deprecated use `TranscodeProfileProfile$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<typeof TranscodeProfileProfile>;
}
/** @internal */
export declare const TranscodeProfileEncoder$inboundSchema: z.ZodNativeEnum<typeof TranscodeProfileEncoder>;
/** @internal */
export declare const TranscodeProfileEncoder$outboundSchema: z.ZodNativeEnum<typeof TranscodeProfileEncoder>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TranscodeProfileEncoder$ {
    /** @deprecated use `TranscodeProfileEncoder$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<typeof TranscodeProfileEncoder>;
    /** @deprecated use `TranscodeProfileEncoder$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<typeof TranscodeProfileEncoder>;
}
/** @internal */
export declare const TranscodeProfile$inboundSchema: z.ZodType<TranscodeProfile, z.ZodTypeDef, unknown>;
/** @internal */
export type TranscodeProfile$Outbound = {
    width?: number | undefined;
    name?: string | undefined;
    height?: number | undefined;
    bitrate: number;
    quality?: number | undefined;
    fps?: number | undefined;
    fpsDen?: number | undefined;
    gop?: string | undefined;
    profile?: string | undefined;
    encoder?: string | undefined;
};
/** @internal */
export declare const TranscodeProfile$outboundSchema: z.ZodType<TranscodeProfile$Outbound, z.ZodTypeDef, TranscodeProfile>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TranscodeProfile$ {
    /** @deprecated use `TranscodeProfile$inboundSchema` instead. */
    const inboundSchema: z.ZodType<TranscodeProfile, z.ZodTypeDef, unknown>;
    /** @deprecated use `TranscodeProfile$outboundSchema` instead. */
    const outboundSchema: z.ZodType<TranscodeProfile$Outbound, z.ZodTypeDef, TranscodeProfile>;
    /** @deprecated use `TranscodeProfile$Outbound` instead. */
    type Outbound = TranscodeProfile$Outbound;
}
export declare function transcodeProfileToJSON(transcodeProfile: TranscodeProfile): string;
export declare function transcodeProfileFromJSON(jsonString: string): SafeParseResult<TranscodeProfile, SDKValidationError>;
//# sourceMappingURL=transcodeprofile.d.ts.map