import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Media, Media$Outbound } from "./media.js";
/**
 * Response model for image generation.
 */
export type VideoResponse = {
    /**
     * The generated images.
     */
    images: Array<Media>;
};
/** @internal */
export declare const VideoResponse$inboundSchema: z.ZodType<VideoResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type VideoResponse$Outbound = {
    images: Array<Media$Outbound>;
};
/** @internal */
export declare const VideoResponse$outboundSchema: z.ZodType<VideoResponse$Outbound, z.ZodTypeDef, VideoResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace VideoResponse$ {
    /** @deprecated use `VideoResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<VideoResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `VideoResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<VideoResponse$Outbound, z.ZodTypeDef, VideoResponse>;
    /** @deprecated use `VideoResponse$Outbound` instead. */
    type Outbound = VideoResponse$Outbound;
}
export declare function videoResponseToJSON(videoResponse: VideoResponse): string;
export declare function videoResponseFromJSON(jsonString: string): SafeParseResult<VideoResponse, SDKValidationError>;
//# sourceMappingURL=videoresponse.d.ts.map