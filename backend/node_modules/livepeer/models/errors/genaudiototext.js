"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenAudioToTextResponseBody$ = exports.GenAudioToTextResponseBody$outboundSchema = exports.GenAudioToTextResponseBody$inboundSchema = exports.GenAudioToTextGenerateResponseBody$ = exports.GenAudioToTextGenerateResponseBody$outboundSchema = exports.GenAudioToTextGenerateResponseBody$inboundSchema = exports.GenAudioToTextGenerateResponseResponseBody$ = exports.GenAudioToTextGenerateResponseResponseBody$outboundSchema = exports.GenAudioToTextGenerateResponseResponseBody$inboundSchema = exports.GenAudioToTextGenerateResponse415ResponseBody$ = exports.GenAudioToTextGenerateResponse415ResponseBody$outboundSchema = exports.GenAudioToTextGenerateResponse415ResponseBody$inboundSchema = exports.GenAudioToTextGenerateResponse422ResponseBody$ = exports.GenAudioToTextGenerateResponse422ResponseBody$outboundSchema = exports.GenAudioToTextGenerateResponse422ResponseBody$inboundSchema = exports.GenAudioToTextGenerateResponse500ResponseBody$ = exports.GenAudioToTextGenerateResponse500ResponseBody$outboundSchema = exports.GenAudioToTextGenerateResponse500ResponseBody$inboundSchema = void 0;
exports.genAudioToTextGenerateResponse500ResponseBodyToJSON = genAudioToTextGenerateResponse500ResponseBodyToJSON;
exports.genAudioToTextGenerateResponse500ResponseBodyFromJSON = genAudioToTextGenerateResponse500ResponseBodyFromJSON;
exports.genAudioToTextGenerateResponse422ResponseBodyToJSON = genAudioToTextGenerateResponse422ResponseBodyToJSON;
exports.genAudioToTextGenerateResponse422ResponseBodyFromJSON = genAudioToTextGenerateResponse422ResponseBodyFromJSON;
exports.genAudioToTextGenerateResponse415ResponseBodyToJSON = genAudioToTextGenerateResponse415ResponseBodyToJSON;
exports.genAudioToTextGenerateResponse415ResponseBodyFromJSON = genAudioToTextGenerateResponse415ResponseBodyFromJSON;
exports.genAudioToTextGenerateResponseResponseBodyToJSON = genAudioToTextGenerateResponseResponseBodyToJSON;
exports.genAudioToTextGenerateResponseResponseBodyFromJSON = genAudioToTextGenerateResponseResponseBodyFromJSON;
exports.genAudioToTextGenerateResponseBodyToJSON = genAudioToTextGenerateResponseBodyToJSON;
exports.genAudioToTextGenerateResponseBodyFromJSON = genAudioToTextGenerateResponseBodyFromJSON;
exports.genAudioToTextResponseBodyToJSON = genAudioToTextResponseBodyToJSON;
exports.genAudioToTextResponseBodyFromJSON = genAudioToTextResponseBodyFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const httperror_js_1 = require("./httperror.js");
const httpvalidationerror_js_1 = require("./httpvalidationerror.js");
const studioapierror_js_1 = require("./studioapierror.js");
/** @internal */
exports.GenAudioToTextGenerateResponse500ResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenAudioToTextGenerateResponse500ResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenAudioToTextGenerateResponse500ResponseBody$;
(function (GenAudioToTextGenerateResponse500ResponseBody$) {
    /** @deprecated use `GenAudioToTextGenerateResponse500ResponseBody$inboundSchema` instead. */
    GenAudioToTextGenerateResponse500ResponseBody$.inboundSchema = exports.GenAudioToTextGenerateResponse500ResponseBody$inboundSchema;
    /** @deprecated use `GenAudioToTextGenerateResponse500ResponseBody$outboundSchema` instead. */
    GenAudioToTextGenerateResponse500ResponseBody$.outboundSchema = exports.GenAudioToTextGenerateResponse500ResponseBody$outboundSchema;
})(GenAudioToTextGenerateResponse500ResponseBody$ || (exports.GenAudioToTextGenerateResponse500ResponseBody$ = GenAudioToTextGenerateResponse500ResponseBody$ = {}));
function genAudioToTextGenerateResponse500ResponseBodyToJSON(genAudioToTextGenerateResponse500ResponseBody) {
    return JSON.stringify(exports.GenAudioToTextGenerateResponse500ResponseBody$outboundSchema.parse(genAudioToTextGenerateResponse500ResponseBody));
}
function genAudioToTextGenerateResponse500ResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenAudioToTextGenerateResponse500ResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenAudioToTextGenerateResponse500ResponseBody' from JSON`);
}
/** @internal */
exports.GenAudioToTextGenerateResponse422ResponseBody$inboundSchema = z.union([
    httpvalidationerror_js_1.HTTPValidationError$inboundSchema,
    studioapierror_js_1.StudioApiError$inboundSchema,
]);
/** @internal */
exports.GenAudioToTextGenerateResponse422ResponseBody$outboundSchema = z.union([
    httpvalidationerror_js_1.HTTPValidationError$outboundSchema,
    studioapierror_js_1.StudioApiError$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenAudioToTextGenerateResponse422ResponseBody$;
(function (GenAudioToTextGenerateResponse422ResponseBody$) {
    /** @deprecated use `GenAudioToTextGenerateResponse422ResponseBody$inboundSchema` instead. */
    GenAudioToTextGenerateResponse422ResponseBody$.inboundSchema = exports.GenAudioToTextGenerateResponse422ResponseBody$inboundSchema;
    /** @deprecated use `GenAudioToTextGenerateResponse422ResponseBody$outboundSchema` instead. */
    GenAudioToTextGenerateResponse422ResponseBody$.outboundSchema = exports.GenAudioToTextGenerateResponse422ResponseBody$outboundSchema;
})(GenAudioToTextGenerateResponse422ResponseBody$ || (exports.GenAudioToTextGenerateResponse422ResponseBody$ = GenAudioToTextGenerateResponse422ResponseBody$ = {}));
function genAudioToTextGenerateResponse422ResponseBodyToJSON(genAudioToTextGenerateResponse422ResponseBody) {
    return JSON.stringify(exports.GenAudioToTextGenerateResponse422ResponseBody$outboundSchema.parse(genAudioToTextGenerateResponse422ResponseBody));
}
function genAudioToTextGenerateResponse422ResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenAudioToTextGenerateResponse422ResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenAudioToTextGenerateResponse422ResponseBody' from JSON`);
}
/** @internal */
exports.GenAudioToTextGenerateResponse415ResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenAudioToTextGenerateResponse415ResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenAudioToTextGenerateResponse415ResponseBody$;
(function (GenAudioToTextGenerateResponse415ResponseBody$) {
    /** @deprecated use `GenAudioToTextGenerateResponse415ResponseBody$inboundSchema` instead. */
    GenAudioToTextGenerateResponse415ResponseBody$.inboundSchema = exports.GenAudioToTextGenerateResponse415ResponseBody$inboundSchema;
    /** @deprecated use `GenAudioToTextGenerateResponse415ResponseBody$outboundSchema` instead. */
    GenAudioToTextGenerateResponse415ResponseBody$.outboundSchema = exports.GenAudioToTextGenerateResponse415ResponseBody$outboundSchema;
})(GenAudioToTextGenerateResponse415ResponseBody$ || (exports.GenAudioToTextGenerateResponse415ResponseBody$ = GenAudioToTextGenerateResponse415ResponseBody$ = {}));
function genAudioToTextGenerateResponse415ResponseBodyToJSON(genAudioToTextGenerateResponse415ResponseBody) {
    return JSON.stringify(exports.GenAudioToTextGenerateResponse415ResponseBody$outboundSchema.parse(genAudioToTextGenerateResponse415ResponseBody));
}
function genAudioToTextGenerateResponse415ResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenAudioToTextGenerateResponse415ResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenAudioToTextGenerateResponse415ResponseBody' from JSON`);
}
/** @internal */
exports.GenAudioToTextGenerateResponseResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenAudioToTextGenerateResponseResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenAudioToTextGenerateResponseResponseBody$;
(function (GenAudioToTextGenerateResponseResponseBody$) {
    /** @deprecated use `GenAudioToTextGenerateResponseResponseBody$inboundSchema` instead. */
    GenAudioToTextGenerateResponseResponseBody$.inboundSchema = exports.GenAudioToTextGenerateResponseResponseBody$inboundSchema;
    /** @deprecated use `GenAudioToTextGenerateResponseResponseBody$outboundSchema` instead. */
    GenAudioToTextGenerateResponseResponseBody$.outboundSchema = exports.GenAudioToTextGenerateResponseResponseBody$outboundSchema;
})(GenAudioToTextGenerateResponseResponseBody$ || (exports.GenAudioToTextGenerateResponseResponseBody$ = GenAudioToTextGenerateResponseResponseBody$ = {}));
function genAudioToTextGenerateResponseResponseBodyToJSON(genAudioToTextGenerateResponseResponseBody) {
    return JSON.stringify(exports.GenAudioToTextGenerateResponseResponseBody$outboundSchema.parse(genAudioToTextGenerateResponseResponseBody));
}
function genAudioToTextGenerateResponseResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenAudioToTextGenerateResponseResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenAudioToTextGenerateResponseResponseBody' from JSON`);
}
/** @internal */
exports.GenAudioToTextGenerateResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenAudioToTextGenerateResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenAudioToTextGenerateResponseBody$;
(function (GenAudioToTextGenerateResponseBody$) {
    /** @deprecated use `GenAudioToTextGenerateResponseBody$inboundSchema` instead. */
    GenAudioToTextGenerateResponseBody$.inboundSchema = exports.GenAudioToTextGenerateResponseBody$inboundSchema;
    /** @deprecated use `GenAudioToTextGenerateResponseBody$outboundSchema` instead. */
    GenAudioToTextGenerateResponseBody$.outboundSchema = exports.GenAudioToTextGenerateResponseBody$outboundSchema;
})(GenAudioToTextGenerateResponseBody$ || (exports.GenAudioToTextGenerateResponseBody$ = GenAudioToTextGenerateResponseBody$ = {}));
function genAudioToTextGenerateResponseBodyToJSON(genAudioToTextGenerateResponseBody) {
    return JSON.stringify(exports.GenAudioToTextGenerateResponseBody$outboundSchema.parse(genAudioToTextGenerateResponseBody));
}
function genAudioToTextGenerateResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenAudioToTextGenerateResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenAudioToTextGenerateResponseBody' from JSON`);
}
/** @internal */
exports.GenAudioToTextResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenAudioToTextResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenAudioToTextResponseBody$;
(function (GenAudioToTextResponseBody$) {
    /** @deprecated use `GenAudioToTextResponseBody$inboundSchema` instead. */
    GenAudioToTextResponseBody$.inboundSchema = exports.GenAudioToTextResponseBody$inboundSchema;
    /** @deprecated use `GenAudioToTextResponseBody$outboundSchema` instead. */
    GenAudioToTextResponseBody$.outboundSchema = exports.GenAudioToTextResponseBody$outboundSchema;
})(GenAudioToTextResponseBody$ || (exports.GenAudioToTextResponseBody$ = GenAudioToTextResponseBody$ = {}));
function genAudioToTextResponseBodyToJSON(genAudioToTextResponseBody) {
    return JSON.stringify(exports.GenAudioToTextResponseBody$outboundSchema.parse(genAudioToTextResponseBody));
}
function genAudioToTextResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenAudioToTextResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenAudioToTextResponseBody' from JSON`);
}
//# sourceMappingURL=genaudiototext.js.map