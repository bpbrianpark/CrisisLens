"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenImageToImageResponseBody$ = exports.GenImageToImageResponseBody$outboundSchema = exports.GenImageToImageResponseBody$inboundSchema = exports.GenImageToImageGenerateResponseBody$ = exports.GenImageToImageGenerateResponseBody$outboundSchema = exports.GenImageToImageGenerateResponseBody$inboundSchema = exports.GenImageToImageGenerateResponseResponseBody$ = exports.GenImageToImageGenerateResponseResponseBody$outboundSchema = exports.GenImageToImageGenerateResponseResponseBody$inboundSchema = exports.GenImageToImageGenerateResponse500ResponseBody$ = exports.GenImageToImageGenerateResponse500ResponseBody$outboundSchema = exports.GenImageToImageGenerateResponse500ResponseBody$inboundSchema = void 0;
exports.genImageToImageGenerateResponse500ResponseBodyToJSON = genImageToImageGenerateResponse500ResponseBodyToJSON;
exports.genImageToImageGenerateResponse500ResponseBodyFromJSON = genImageToImageGenerateResponse500ResponseBodyFromJSON;
exports.genImageToImageGenerateResponseResponseBodyToJSON = genImageToImageGenerateResponseResponseBodyToJSON;
exports.genImageToImageGenerateResponseResponseBodyFromJSON = genImageToImageGenerateResponseResponseBodyFromJSON;
exports.genImageToImageGenerateResponseBodyToJSON = genImageToImageGenerateResponseBodyToJSON;
exports.genImageToImageGenerateResponseBodyFromJSON = genImageToImageGenerateResponseBodyFromJSON;
exports.genImageToImageResponseBodyToJSON = genImageToImageResponseBodyToJSON;
exports.genImageToImageResponseBodyFromJSON = genImageToImageResponseBodyFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const httperror_js_1 = require("./httperror.js");
const httpvalidationerror_js_1 = require("./httpvalidationerror.js");
const studioapierror_js_1 = require("./studioapierror.js");
/** @internal */
exports.GenImageToImageGenerateResponse500ResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenImageToImageGenerateResponse500ResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenImageToImageGenerateResponse500ResponseBody$;
(function (GenImageToImageGenerateResponse500ResponseBody$) {
    /** @deprecated use `GenImageToImageGenerateResponse500ResponseBody$inboundSchema` instead. */
    GenImageToImageGenerateResponse500ResponseBody$.inboundSchema = exports.GenImageToImageGenerateResponse500ResponseBody$inboundSchema;
    /** @deprecated use `GenImageToImageGenerateResponse500ResponseBody$outboundSchema` instead. */
    GenImageToImageGenerateResponse500ResponseBody$.outboundSchema = exports.GenImageToImageGenerateResponse500ResponseBody$outboundSchema;
})(GenImageToImageGenerateResponse500ResponseBody$ || (exports.GenImageToImageGenerateResponse500ResponseBody$ = GenImageToImageGenerateResponse500ResponseBody$ = {}));
function genImageToImageGenerateResponse500ResponseBodyToJSON(genImageToImageGenerateResponse500ResponseBody) {
    return JSON.stringify(exports.GenImageToImageGenerateResponse500ResponseBody$outboundSchema.parse(genImageToImageGenerateResponse500ResponseBody));
}
function genImageToImageGenerateResponse500ResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenImageToImageGenerateResponse500ResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenImageToImageGenerateResponse500ResponseBody' from JSON`);
}
/** @internal */
exports.GenImageToImageGenerateResponseResponseBody$inboundSchema = z.union([
    httpvalidationerror_js_1.HTTPValidationError$inboundSchema,
    studioapierror_js_1.StudioApiError$inboundSchema,
]);
/** @internal */
exports.GenImageToImageGenerateResponseResponseBody$outboundSchema = z.union([
    httpvalidationerror_js_1.HTTPValidationError$outboundSchema,
    studioapierror_js_1.StudioApiError$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenImageToImageGenerateResponseResponseBody$;
(function (GenImageToImageGenerateResponseResponseBody$) {
    /** @deprecated use `GenImageToImageGenerateResponseResponseBody$inboundSchema` instead. */
    GenImageToImageGenerateResponseResponseBody$.inboundSchema = exports.GenImageToImageGenerateResponseResponseBody$inboundSchema;
    /** @deprecated use `GenImageToImageGenerateResponseResponseBody$outboundSchema` instead. */
    GenImageToImageGenerateResponseResponseBody$.outboundSchema = exports.GenImageToImageGenerateResponseResponseBody$outboundSchema;
})(GenImageToImageGenerateResponseResponseBody$ || (exports.GenImageToImageGenerateResponseResponseBody$ = GenImageToImageGenerateResponseResponseBody$ = {}));
function genImageToImageGenerateResponseResponseBodyToJSON(genImageToImageGenerateResponseResponseBody) {
    return JSON.stringify(exports.GenImageToImageGenerateResponseResponseBody$outboundSchema.parse(genImageToImageGenerateResponseResponseBody));
}
function genImageToImageGenerateResponseResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenImageToImageGenerateResponseResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenImageToImageGenerateResponseResponseBody' from JSON`);
}
/** @internal */
exports.GenImageToImageGenerateResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenImageToImageGenerateResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenImageToImageGenerateResponseBody$;
(function (GenImageToImageGenerateResponseBody$) {
    /** @deprecated use `GenImageToImageGenerateResponseBody$inboundSchema` instead. */
    GenImageToImageGenerateResponseBody$.inboundSchema = exports.GenImageToImageGenerateResponseBody$inboundSchema;
    /** @deprecated use `GenImageToImageGenerateResponseBody$outboundSchema` instead. */
    GenImageToImageGenerateResponseBody$.outboundSchema = exports.GenImageToImageGenerateResponseBody$outboundSchema;
})(GenImageToImageGenerateResponseBody$ || (exports.GenImageToImageGenerateResponseBody$ = GenImageToImageGenerateResponseBody$ = {}));
function genImageToImageGenerateResponseBodyToJSON(genImageToImageGenerateResponseBody) {
    return JSON.stringify(exports.GenImageToImageGenerateResponseBody$outboundSchema.parse(genImageToImageGenerateResponseBody));
}
function genImageToImageGenerateResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenImageToImageGenerateResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenImageToImageGenerateResponseBody' from JSON`);
}
/** @internal */
exports.GenImageToImageResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenImageToImageResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenImageToImageResponseBody$;
(function (GenImageToImageResponseBody$) {
    /** @deprecated use `GenImageToImageResponseBody$inboundSchema` instead. */
    GenImageToImageResponseBody$.inboundSchema = exports.GenImageToImageResponseBody$inboundSchema;
    /** @deprecated use `GenImageToImageResponseBody$outboundSchema` instead. */
    GenImageToImageResponseBody$.outboundSchema = exports.GenImageToImageResponseBody$outboundSchema;
})(GenImageToImageResponseBody$ || (exports.GenImageToImageResponseBody$ = GenImageToImageResponseBody$ = {}));
function genImageToImageResponseBodyToJSON(genImageToImageResponseBody) {
    return JSON.stringify(exports.GenImageToImageResponseBody$outboundSchema.parse(genImageToImageResponseBody));
}
function genImageToImageResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenImageToImageResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenImageToImageResponseBody' from JSON`);
}
//# sourceMappingURL=genimagetoimage.js.map