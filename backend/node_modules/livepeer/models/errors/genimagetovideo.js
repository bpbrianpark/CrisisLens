"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenImageToVideoResponseBody$ = exports.GenImageToVideoResponseBody$outboundSchema = exports.GenImageToVideoResponseBody$inboundSchema = exports.GenImageToVideoGenerateResponseBody$ = exports.GenImageToVideoGenerateResponseBody$outboundSchema = exports.GenImageToVideoGenerateResponseBody$inboundSchema = exports.GenImageToVideoGenerateResponseResponseBody$ = exports.GenImageToVideoGenerateResponseResponseBody$outboundSchema = exports.GenImageToVideoGenerateResponseResponseBody$inboundSchema = exports.GenImageToVideoGenerateResponse500ResponseBody$ = exports.GenImageToVideoGenerateResponse500ResponseBody$outboundSchema = exports.GenImageToVideoGenerateResponse500ResponseBody$inboundSchema = void 0;
exports.genImageToVideoGenerateResponse500ResponseBodyToJSON = genImageToVideoGenerateResponse500ResponseBodyToJSON;
exports.genImageToVideoGenerateResponse500ResponseBodyFromJSON = genImageToVideoGenerateResponse500ResponseBodyFromJSON;
exports.genImageToVideoGenerateResponseResponseBodyToJSON = genImageToVideoGenerateResponseResponseBodyToJSON;
exports.genImageToVideoGenerateResponseResponseBodyFromJSON = genImageToVideoGenerateResponseResponseBodyFromJSON;
exports.genImageToVideoGenerateResponseBodyToJSON = genImageToVideoGenerateResponseBodyToJSON;
exports.genImageToVideoGenerateResponseBodyFromJSON = genImageToVideoGenerateResponseBodyFromJSON;
exports.genImageToVideoResponseBodyToJSON = genImageToVideoResponseBodyToJSON;
exports.genImageToVideoResponseBodyFromJSON = genImageToVideoResponseBodyFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const httperror_js_1 = require("./httperror.js");
const httpvalidationerror_js_1 = require("./httpvalidationerror.js");
const studioapierror_js_1 = require("./studioapierror.js");
/** @internal */
exports.GenImageToVideoGenerateResponse500ResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenImageToVideoGenerateResponse500ResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenImageToVideoGenerateResponse500ResponseBody$;
(function (GenImageToVideoGenerateResponse500ResponseBody$) {
    /** @deprecated use `GenImageToVideoGenerateResponse500ResponseBody$inboundSchema` instead. */
    GenImageToVideoGenerateResponse500ResponseBody$.inboundSchema = exports.GenImageToVideoGenerateResponse500ResponseBody$inboundSchema;
    /** @deprecated use `GenImageToVideoGenerateResponse500ResponseBody$outboundSchema` instead. */
    GenImageToVideoGenerateResponse500ResponseBody$.outboundSchema = exports.GenImageToVideoGenerateResponse500ResponseBody$outboundSchema;
})(GenImageToVideoGenerateResponse500ResponseBody$ || (exports.GenImageToVideoGenerateResponse500ResponseBody$ = GenImageToVideoGenerateResponse500ResponseBody$ = {}));
function genImageToVideoGenerateResponse500ResponseBodyToJSON(genImageToVideoGenerateResponse500ResponseBody) {
    return JSON.stringify(exports.GenImageToVideoGenerateResponse500ResponseBody$outboundSchema.parse(genImageToVideoGenerateResponse500ResponseBody));
}
function genImageToVideoGenerateResponse500ResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenImageToVideoGenerateResponse500ResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenImageToVideoGenerateResponse500ResponseBody' from JSON`);
}
/** @internal */
exports.GenImageToVideoGenerateResponseResponseBody$inboundSchema = z.union([
    httpvalidationerror_js_1.HTTPValidationError$inboundSchema,
    studioapierror_js_1.StudioApiError$inboundSchema,
]);
/** @internal */
exports.GenImageToVideoGenerateResponseResponseBody$outboundSchema = z.union([
    httpvalidationerror_js_1.HTTPValidationError$outboundSchema,
    studioapierror_js_1.StudioApiError$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenImageToVideoGenerateResponseResponseBody$;
(function (GenImageToVideoGenerateResponseResponseBody$) {
    /** @deprecated use `GenImageToVideoGenerateResponseResponseBody$inboundSchema` instead. */
    GenImageToVideoGenerateResponseResponseBody$.inboundSchema = exports.GenImageToVideoGenerateResponseResponseBody$inboundSchema;
    /** @deprecated use `GenImageToVideoGenerateResponseResponseBody$outboundSchema` instead. */
    GenImageToVideoGenerateResponseResponseBody$.outboundSchema = exports.GenImageToVideoGenerateResponseResponseBody$outboundSchema;
})(GenImageToVideoGenerateResponseResponseBody$ || (exports.GenImageToVideoGenerateResponseResponseBody$ = GenImageToVideoGenerateResponseResponseBody$ = {}));
function genImageToVideoGenerateResponseResponseBodyToJSON(genImageToVideoGenerateResponseResponseBody) {
    return JSON.stringify(exports.GenImageToVideoGenerateResponseResponseBody$outboundSchema.parse(genImageToVideoGenerateResponseResponseBody));
}
function genImageToVideoGenerateResponseResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenImageToVideoGenerateResponseResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenImageToVideoGenerateResponseResponseBody' from JSON`);
}
/** @internal */
exports.GenImageToVideoGenerateResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenImageToVideoGenerateResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenImageToVideoGenerateResponseBody$;
(function (GenImageToVideoGenerateResponseBody$) {
    /** @deprecated use `GenImageToVideoGenerateResponseBody$inboundSchema` instead. */
    GenImageToVideoGenerateResponseBody$.inboundSchema = exports.GenImageToVideoGenerateResponseBody$inboundSchema;
    /** @deprecated use `GenImageToVideoGenerateResponseBody$outboundSchema` instead. */
    GenImageToVideoGenerateResponseBody$.outboundSchema = exports.GenImageToVideoGenerateResponseBody$outboundSchema;
})(GenImageToVideoGenerateResponseBody$ || (exports.GenImageToVideoGenerateResponseBody$ = GenImageToVideoGenerateResponseBody$ = {}));
function genImageToVideoGenerateResponseBodyToJSON(genImageToVideoGenerateResponseBody) {
    return JSON.stringify(exports.GenImageToVideoGenerateResponseBody$outboundSchema.parse(genImageToVideoGenerateResponseBody));
}
function genImageToVideoGenerateResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenImageToVideoGenerateResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenImageToVideoGenerateResponseBody' from JSON`);
}
/** @internal */
exports.GenImageToVideoResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenImageToVideoResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenImageToVideoResponseBody$;
(function (GenImageToVideoResponseBody$) {
    /** @deprecated use `GenImageToVideoResponseBody$inboundSchema` instead. */
    GenImageToVideoResponseBody$.inboundSchema = exports.GenImageToVideoResponseBody$inboundSchema;
    /** @deprecated use `GenImageToVideoResponseBody$outboundSchema` instead. */
    GenImageToVideoResponseBody$.outboundSchema = exports.GenImageToVideoResponseBody$outboundSchema;
})(GenImageToVideoResponseBody$ || (exports.GenImageToVideoResponseBody$ = GenImageToVideoResponseBody$ = {}));
function genImageToVideoResponseBodyToJSON(genImageToVideoResponseBody) {
    return JSON.stringify(exports.GenImageToVideoResponseBody$outboundSchema.parse(genImageToVideoResponseBody));
}
function genImageToVideoResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenImageToVideoResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenImageToVideoResponseBody' from JSON`);
}
//# sourceMappingURL=genimagetovideo.js.map