"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenLLMResponseBody$ = exports.GenLLMResponseBody$outboundSchema = exports.GenLLMResponseBody$inboundSchema = exports.GenLLMGenerateResponseBody$ = exports.GenLLMGenerateResponseBody$outboundSchema = exports.GenLLMGenerateResponseBody$inboundSchema = exports.GenLLMGenerateResponseResponseBody$ = exports.GenLLMGenerateResponseResponseBody$outboundSchema = exports.GenLLMGenerateResponseResponseBody$inboundSchema = exports.GenLLMGenerateResponse500ResponseBody$ = exports.GenLLMGenerateResponse500ResponseBody$outboundSchema = exports.GenLLMGenerateResponse500ResponseBody$inboundSchema = void 0;
exports.genLLMGenerateResponse500ResponseBodyToJSON = genLLMGenerateResponse500ResponseBodyToJSON;
exports.genLLMGenerateResponse500ResponseBodyFromJSON = genLLMGenerateResponse500ResponseBodyFromJSON;
exports.genLLMGenerateResponseResponseBodyToJSON = genLLMGenerateResponseResponseBodyToJSON;
exports.genLLMGenerateResponseResponseBodyFromJSON = genLLMGenerateResponseResponseBodyFromJSON;
exports.genLLMGenerateResponseBodyToJSON = genLLMGenerateResponseBodyToJSON;
exports.genLLMGenerateResponseBodyFromJSON = genLLMGenerateResponseBodyFromJSON;
exports.genLLMResponseBodyToJSON = genLLMResponseBodyToJSON;
exports.genLLMResponseBodyFromJSON = genLLMResponseBodyFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const httperror_js_1 = require("./httperror.js");
const httpvalidationerror_js_1 = require("./httpvalidationerror.js");
const studioapierror_js_1 = require("./studioapierror.js");
/** @internal */
exports.GenLLMGenerateResponse500ResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenLLMGenerateResponse500ResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenLLMGenerateResponse500ResponseBody$;
(function (GenLLMGenerateResponse500ResponseBody$) {
    /** @deprecated use `GenLLMGenerateResponse500ResponseBody$inboundSchema` instead. */
    GenLLMGenerateResponse500ResponseBody$.inboundSchema = exports.GenLLMGenerateResponse500ResponseBody$inboundSchema;
    /** @deprecated use `GenLLMGenerateResponse500ResponseBody$outboundSchema` instead. */
    GenLLMGenerateResponse500ResponseBody$.outboundSchema = exports.GenLLMGenerateResponse500ResponseBody$outboundSchema;
})(GenLLMGenerateResponse500ResponseBody$ || (exports.GenLLMGenerateResponse500ResponseBody$ = GenLLMGenerateResponse500ResponseBody$ = {}));
function genLLMGenerateResponse500ResponseBodyToJSON(genLLMGenerateResponse500ResponseBody) {
    return JSON.stringify(exports.GenLLMGenerateResponse500ResponseBody$outboundSchema.parse(genLLMGenerateResponse500ResponseBody));
}
function genLLMGenerateResponse500ResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenLLMGenerateResponse500ResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenLLMGenerateResponse500ResponseBody' from JSON`);
}
/** @internal */
exports.GenLLMGenerateResponseResponseBody$inboundSchema = z.union([httpvalidationerror_js_1.HTTPValidationError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenLLMGenerateResponseResponseBody$outboundSchema = z.union([
    httpvalidationerror_js_1.HTTPValidationError$outboundSchema,
    studioapierror_js_1.StudioApiError$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenLLMGenerateResponseResponseBody$;
(function (GenLLMGenerateResponseResponseBody$) {
    /** @deprecated use `GenLLMGenerateResponseResponseBody$inboundSchema` instead. */
    GenLLMGenerateResponseResponseBody$.inboundSchema = exports.GenLLMGenerateResponseResponseBody$inboundSchema;
    /** @deprecated use `GenLLMGenerateResponseResponseBody$outboundSchema` instead. */
    GenLLMGenerateResponseResponseBody$.outboundSchema = exports.GenLLMGenerateResponseResponseBody$outboundSchema;
})(GenLLMGenerateResponseResponseBody$ || (exports.GenLLMGenerateResponseResponseBody$ = GenLLMGenerateResponseResponseBody$ = {}));
function genLLMGenerateResponseResponseBodyToJSON(genLLMGenerateResponseResponseBody) {
    return JSON.stringify(exports.GenLLMGenerateResponseResponseBody$outboundSchema.parse(genLLMGenerateResponseResponseBody));
}
function genLLMGenerateResponseResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenLLMGenerateResponseResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenLLMGenerateResponseResponseBody' from JSON`);
}
/** @internal */
exports.GenLLMGenerateResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenLLMGenerateResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenLLMGenerateResponseBody$;
(function (GenLLMGenerateResponseBody$) {
    /** @deprecated use `GenLLMGenerateResponseBody$inboundSchema` instead. */
    GenLLMGenerateResponseBody$.inboundSchema = exports.GenLLMGenerateResponseBody$inboundSchema;
    /** @deprecated use `GenLLMGenerateResponseBody$outboundSchema` instead. */
    GenLLMGenerateResponseBody$.outboundSchema = exports.GenLLMGenerateResponseBody$outboundSchema;
})(GenLLMGenerateResponseBody$ || (exports.GenLLMGenerateResponseBody$ = GenLLMGenerateResponseBody$ = {}));
function genLLMGenerateResponseBodyToJSON(genLLMGenerateResponseBody) {
    return JSON.stringify(exports.GenLLMGenerateResponseBody$outboundSchema.parse(genLLMGenerateResponseBody));
}
function genLLMGenerateResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenLLMGenerateResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenLLMGenerateResponseBody' from JSON`);
}
/** @internal */
exports.GenLLMResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenLLMResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenLLMResponseBody$;
(function (GenLLMResponseBody$) {
    /** @deprecated use `GenLLMResponseBody$inboundSchema` instead. */
    GenLLMResponseBody$.inboundSchema = exports.GenLLMResponseBody$inboundSchema;
    /** @deprecated use `GenLLMResponseBody$outboundSchema` instead. */
    GenLLMResponseBody$.outboundSchema = exports.GenLLMResponseBody$outboundSchema;
})(GenLLMResponseBody$ || (exports.GenLLMResponseBody$ = GenLLMResponseBody$ = {}));
function genLLMResponseBodyToJSON(genLLMResponseBody) {
    return JSON.stringify(exports.GenLLMResponseBody$outboundSchema.parse(genLLMResponseBody));
}
function genLLMResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenLLMResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenLLMResponseBody' from JSON`);
}
//# sourceMappingURL=genllm.js.map