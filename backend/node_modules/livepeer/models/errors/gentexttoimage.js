"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenTextToImageResponseBody$ = exports.GenTextToImageResponseBody$outboundSchema = exports.GenTextToImageResponseBody$inboundSchema = exports.GenTextToImageGenerateResponseBody$ = exports.GenTextToImageGenerateResponseBody$outboundSchema = exports.GenTextToImageGenerateResponseBody$inboundSchema = exports.GenTextToImageGenerateResponseResponseBody$ = exports.GenTextToImageGenerateResponseResponseBody$outboundSchema = exports.GenTextToImageGenerateResponseResponseBody$inboundSchema = exports.GenTextToImageGenerateResponse500ResponseBody$ = exports.GenTextToImageGenerateResponse500ResponseBody$outboundSchema = exports.GenTextToImageGenerateResponse500ResponseBody$inboundSchema = void 0;
exports.genTextToImageGenerateResponse500ResponseBodyToJSON = genTextToImageGenerateResponse500ResponseBodyToJSON;
exports.genTextToImageGenerateResponse500ResponseBodyFromJSON = genTextToImageGenerateResponse500ResponseBodyFromJSON;
exports.genTextToImageGenerateResponseResponseBodyToJSON = genTextToImageGenerateResponseResponseBodyToJSON;
exports.genTextToImageGenerateResponseResponseBodyFromJSON = genTextToImageGenerateResponseResponseBodyFromJSON;
exports.genTextToImageGenerateResponseBodyToJSON = genTextToImageGenerateResponseBodyToJSON;
exports.genTextToImageGenerateResponseBodyFromJSON = genTextToImageGenerateResponseBodyFromJSON;
exports.genTextToImageResponseBodyToJSON = genTextToImageResponseBodyToJSON;
exports.genTextToImageResponseBodyFromJSON = genTextToImageResponseBodyFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const httperror_js_1 = require("./httperror.js");
const httpvalidationerror_js_1 = require("./httpvalidationerror.js");
const studioapierror_js_1 = require("./studioapierror.js");
/** @internal */
exports.GenTextToImageGenerateResponse500ResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenTextToImageGenerateResponse500ResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenTextToImageGenerateResponse500ResponseBody$;
(function (GenTextToImageGenerateResponse500ResponseBody$) {
    /** @deprecated use `GenTextToImageGenerateResponse500ResponseBody$inboundSchema` instead. */
    GenTextToImageGenerateResponse500ResponseBody$.inboundSchema = exports.GenTextToImageGenerateResponse500ResponseBody$inboundSchema;
    /** @deprecated use `GenTextToImageGenerateResponse500ResponseBody$outboundSchema` instead. */
    GenTextToImageGenerateResponse500ResponseBody$.outboundSchema = exports.GenTextToImageGenerateResponse500ResponseBody$outboundSchema;
})(GenTextToImageGenerateResponse500ResponseBody$ || (exports.GenTextToImageGenerateResponse500ResponseBody$ = GenTextToImageGenerateResponse500ResponseBody$ = {}));
function genTextToImageGenerateResponse500ResponseBodyToJSON(genTextToImageGenerateResponse500ResponseBody) {
    return JSON.stringify(exports.GenTextToImageGenerateResponse500ResponseBody$outboundSchema.parse(genTextToImageGenerateResponse500ResponseBody));
}
function genTextToImageGenerateResponse500ResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenTextToImageGenerateResponse500ResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenTextToImageGenerateResponse500ResponseBody' from JSON`);
}
/** @internal */
exports.GenTextToImageGenerateResponseResponseBody$inboundSchema = z.union([httpvalidationerror_js_1.HTTPValidationError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenTextToImageGenerateResponseResponseBody$outboundSchema = z.union([
    httpvalidationerror_js_1.HTTPValidationError$outboundSchema,
    studioapierror_js_1.StudioApiError$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenTextToImageGenerateResponseResponseBody$;
(function (GenTextToImageGenerateResponseResponseBody$) {
    /** @deprecated use `GenTextToImageGenerateResponseResponseBody$inboundSchema` instead. */
    GenTextToImageGenerateResponseResponseBody$.inboundSchema = exports.GenTextToImageGenerateResponseResponseBody$inboundSchema;
    /** @deprecated use `GenTextToImageGenerateResponseResponseBody$outboundSchema` instead. */
    GenTextToImageGenerateResponseResponseBody$.outboundSchema = exports.GenTextToImageGenerateResponseResponseBody$outboundSchema;
})(GenTextToImageGenerateResponseResponseBody$ || (exports.GenTextToImageGenerateResponseResponseBody$ = GenTextToImageGenerateResponseResponseBody$ = {}));
function genTextToImageGenerateResponseResponseBodyToJSON(genTextToImageGenerateResponseResponseBody) {
    return JSON.stringify(exports.GenTextToImageGenerateResponseResponseBody$outboundSchema.parse(genTextToImageGenerateResponseResponseBody));
}
function genTextToImageGenerateResponseResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenTextToImageGenerateResponseResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenTextToImageGenerateResponseResponseBody' from JSON`);
}
/** @internal */
exports.GenTextToImageGenerateResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenTextToImageGenerateResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenTextToImageGenerateResponseBody$;
(function (GenTextToImageGenerateResponseBody$) {
    /** @deprecated use `GenTextToImageGenerateResponseBody$inboundSchema` instead. */
    GenTextToImageGenerateResponseBody$.inboundSchema = exports.GenTextToImageGenerateResponseBody$inboundSchema;
    /** @deprecated use `GenTextToImageGenerateResponseBody$outboundSchema` instead. */
    GenTextToImageGenerateResponseBody$.outboundSchema = exports.GenTextToImageGenerateResponseBody$outboundSchema;
})(GenTextToImageGenerateResponseBody$ || (exports.GenTextToImageGenerateResponseBody$ = GenTextToImageGenerateResponseBody$ = {}));
function genTextToImageGenerateResponseBodyToJSON(genTextToImageGenerateResponseBody) {
    return JSON.stringify(exports.GenTextToImageGenerateResponseBody$outboundSchema.parse(genTextToImageGenerateResponseBody));
}
function genTextToImageGenerateResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenTextToImageGenerateResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenTextToImageGenerateResponseBody' from JSON`);
}
/** @internal */
exports.GenTextToImageResponseBody$inboundSchema = z.union([httperror_js_1.HTTPError$inboundSchema, studioapierror_js_1.StudioApiError$inboundSchema]);
/** @internal */
exports.GenTextToImageResponseBody$outboundSchema = z.union([httperror_js_1.HTTPError$outboundSchema, studioapierror_js_1.StudioApiError$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GenTextToImageResponseBody$;
(function (GenTextToImageResponseBody$) {
    /** @deprecated use `GenTextToImageResponseBody$inboundSchema` instead. */
    GenTextToImageResponseBody$.inboundSchema = exports.GenTextToImageResponseBody$inboundSchema;
    /** @deprecated use `GenTextToImageResponseBody$outboundSchema` instead. */
    GenTextToImageResponseBody$.outboundSchema = exports.GenTextToImageResponseBody$outboundSchema;
})(GenTextToImageResponseBody$ || (exports.GenTextToImageResponseBody$ = GenTextToImageResponseBody$ = {}));
function genTextToImageResponseBodyToJSON(genTextToImageResponseBody) {
    return JSON.stringify(exports.GenTextToImageResponseBody$outboundSchema.parse(genTextToImageResponseBody));
}
function genTextToImageResponseBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GenTextToImageResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GenTextToImageResponseBody' from JSON`);
}
//# sourceMappingURL=gentexttoimage.js.map