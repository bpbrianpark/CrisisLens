import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CreateClipTask = {
    id?: string | undefined;
};
/**
 * Success
 */
export type CreateClipData = {
    asset: components.Asset;
    task: CreateClipTask;
};
export type CreateClipResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    data?: CreateClipData | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const CreateClipTask$inboundSchema: z.ZodType<CreateClipTask, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateClipTask$Outbound = {
    id?: string | undefined;
};
/** @internal */
export declare const CreateClipTask$outboundSchema: z.ZodType<CreateClipTask$Outbound, z.ZodTypeDef, CreateClipTask>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateClipTask$ {
    /** @deprecated use `CreateClipTask$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateClipTask, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateClipTask$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateClipTask$Outbound, z.ZodTypeDef, CreateClipTask>;
    /** @deprecated use `CreateClipTask$Outbound` instead. */
    type Outbound = CreateClipTask$Outbound;
}
export declare function createClipTaskToJSON(createClipTask: CreateClipTask): string;
export declare function createClipTaskFromJSON(jsonString: string): SafeParseResult<CreateClipTask, SDKValidationError>;
/** @internal */
export declare const CreateClipData$inboundSchema: z.ZodType<CreateClipData, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateClipData$Outbound = {
    asset: components.Asset$Outbound;
    task: CreateClipTask$Outbound;
};
/** @internal */
export declare const CreateClipData$outboundSchema: z.ZodType<CreateClipData$Outbound, z.ZodTypeDef, CreateClipData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateClipData$ {
    /** @deprecated use `CreateClipData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateClipData, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateClipData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateClipData$Outbound, z.ZodTypeDef, CreateClipData>;
    /** @deprecated use `CreateClipData$Outbound` instead. */
    type Outbound = CreateClipData$Outbound;
}
export declare function createClipDataToJSON(createClipData: CreateClipData): string;
export declare function createClipDataFromJSON(jsonString: string): SafeParseResult<CreateClipData, SDKValidationError>;
/** @internal */
export declare const CreateClipResponse$inboundSchema: z.ZodType<CreateClipResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateClipResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    data?: CreateClipData$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const CreateClipResponse$outboundSchema: z.ZodType<CreateClipResponse$Outbound, z.ZodTypeDef, CreateClipResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateClipResponse$ {
    /** @deprecated use `CreateClipResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateClipResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateClipResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateClipResponse$Outbound, z.ZodTypeDef, CreateClipResponse>;
    /** @deprecated use `CreateClipResponse$Outbound` instead. */
    type Outbound = CreateClipResponse$Outbound;
}
export declare function createClipResponseToJSON(createClipResponse: CreateClipResponse): string;
export declare function createClipResponseFromJSON(jsonString: string): SafeParseResult<CreateClipResponse, SDKValidationError>;
//# sourceMappingURL=createclip.d.ts.map