import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CreateRoomResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    createRoomResponse?: components.CreateRoomResponse | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const CreateRoomResponse$inboundSchema: z.ZodType<CreateRoomResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateRoomResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    "create-room-response"?: components.CreateRoomResponse$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const CreateRoomResponse$outboundSchema: z.ZodType<CreateRoomResponse$Outbound, z.ZodTypeDef, CreateRoomResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateRoomResponse$ {
    /** @deprecated use `CreateRoomResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateRoomResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateRoomResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateRoomResponse$Outbound, z.ZodTypeDef, CreateRoomResponse>;
    /** @deprecated use `CreateRoomResponse$Outbound` instead. */
    type Outbound = CreateRoomResponse$Outbound;
}
export declare function createRoomResponseToJSON(createRoomResponse: CreateRoomResponse): string;
export declare function createRoomResponseFromJSON(jsonString: string): SafeParseResult<CreateRoomResponse, SDKValidationError>;
//# sourceMappingURL=createroom.d.ts.map