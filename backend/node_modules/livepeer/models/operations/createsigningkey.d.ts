import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CreateSigningKeyResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    signingKey?: components.SigningKey | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const CreateSigningKeyResponse$inboundSchema: z.ZodType<CreateSigningKeyResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSigningKeyResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    "signing-key"?: components.SigningKey$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const CreateSigningKeyResponse$outboundSchema: z.ZodType<CreateSigningKeyResponse$Outbound, z.ZodTypeDef, CreateSigningKeyResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSigningKeyResponse$ {
    /** @deprecated use `CreateSigningKeyResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSigningKeyResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSigningKeyResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSigningKeyResponse$Outbound, z.ZodTypeDef, CreateSigningKeyResponse>;
    /** @deprecated use `CreateSigningKeyResponse$Outbound` instead. */
    type Outbound = CreateSigningKeyResponse$Outbound;
}
export declare function createSigningKeyResponseToJSON(createSigningKeyResponse: CreateSigningKeyResponse): string;
export declare function createSigningKeyResponseFromJSON(jsonString: string): SafeParseResult<CreateSigningKeyResponse, SDKValidationError>;
//# sourceMappingURL=createsigningkey.d.ts.map