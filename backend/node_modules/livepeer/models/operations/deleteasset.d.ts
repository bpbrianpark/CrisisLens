import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteAssetRequest = {
    /**
     * ID of the asset
     */
    assetId: string;
};
export type DeleteAssetResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const DeleteAssetRequest$inboundSchema: z.ZodType<DeleteAssetRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteAssetRequest$Outbound = {
    assetId: string;
};
/** @internal */
export declare const DeleteAssetRequest$outboundSchema: z.ZodType<DeleteAssetRequest$Outbound, z.ZodTypeDef, DeleteAssetRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteAssetRequest$ {
    /** @deprecated use `DeleteAssetRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteAssetRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteAssetRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteAssetRequest$Outbound, z.ZodTypeDef, DeleteAssetRequest>;
    /** @deprecated use `DeleteAssetRequest$Outbound` instead. */
    type Outbound = DeleteAssetRequest$Outbound;
}
export declare function deleteAssetRequestToJSON(deleteAssetRequest: DeleteAssetRequest): string;
export declare function deleteAssetRequestFromJSON(jsonString: string): SafeParseResult<DeleteAssetRequest, SDKValidationError>;
/** @internal */
export declare const DeleteAssetResponse$inboundSchema: z.ZodType<DeleteAssetResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteAssetResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const DeleteAssetResponse$outboundSchema: z.ZodType<DeleteAssetResponse$Outbound, z.ZodTypeDef, DeleteAssetResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteAssetResponse$ {
    /** @deprecated use `DeleteAssetResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteAssetResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteAssetResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteAssetResponse$Outbound, z.ZodTypeDef, DeleteAssetResponse>;
    /** @deprecated use `DeleteAssetResponse$Outbound` instead. */
    type Outbound = DeleteAssetResponse$Outbound;
}
export declare function deleteAssetResponseToJSON(deleteAssetResponse: DeleteAssetResponse): string;
export declare function deleteAssetResponseFromJSON(jsonString: string): SafeParseResult<DeleteAssetResponse, SDKValidationError>;
//# sourceMappingURL=deleteasset.d.ts.map