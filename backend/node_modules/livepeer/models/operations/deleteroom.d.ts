import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteRoomRequest = {
    id: string;
};
export type DeleteRoomResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const DeleteRoomRequest$inboundSchema: z.ZodType<DeleteRoomRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteRoomRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const DeleteRoomRequest$outboundSchema: z.ZodType<DeleteRoomRequest$Outbound, z.ZodTypeDef, DeleteRoomRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteRoomRequest$ {
    /** @deprecated use `DeleteRoomRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteRoomRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteRoomRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteRoomRequest$Outbound, z.ZodTypeDef, DeleteRoomRequest>;
    /** @deprecated use `DeleteRoomRequest$Outbound` instead. */
    type Outbound = DeleteRoomRequest$Outbound;
}
export declare function deleteRoomRequestToJSON(deleteRoomRequest: DeleteRoomRequest): string;
export declare function deleteRoomRequestFromJSON(jsonString: string): SafeParseResult<DeleteRoomRequest, SDKValidationError>;
/** @internal */
export declare const DeleteRoomResponse$inboundSchema: z.ZodType<DeleteRoomResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteRoomResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const DeleteRoomResponse$outboundSchema: z.ZodType<DeleteRoomResponse$Outbound, z.ZodTypeDef, DeleteRoomResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteRoomResponse$ {
    /** @deprecated use `DeleteRoomResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteRoomResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteRoomResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteRoomResponse$Outbound, z.ZodTypeDef, DeleteRoomResponse>;
    /** @deprecated use `DeleteRoomResponse$Outbound` instead. */
    type Outbound = DeleteRoomResponse$Outbound;
}
export declare function deleteRoomResponseToJSON(deleteRoomResponse: DeleteRoomResponse): string;
export declare function deleteRoomResponseFromJSON(jsonString: string): SafeParseResult<DeleteRoomResponse, SDKValidationError>;
//# sourceMappingURL=deleteroom.d.ts.map