import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteRoomUserRequest = {
    id: string;
    userId: string;
};
export type DeleteRoomUserResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const DeleteRoomUserRequest$inboundSchema: z.ZodType<DeleteRoomUserRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteRoomUserRequest$Outbound = {
    id: string;
    userId: string;
};
/** @internal */
export declare const DeleteRoomUserRequest$outboundSchema: z.ZodType<DeleteRoomUserRequest$Outbound, z.ZodTypeDef, DeleteRoomUserRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteRoomUserRequest$ {
    /** @deprecated use `DeleteRoomUserRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteRoomUserRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteRoomUserRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteRoomUserRequest$Outbound, z.ZodTypeDef, DeleteRoomUserRequest>;
    /** @deprecated use `DeleteRoomUserRequest$Outbound` instead. */
    type Outbound = DeleteRoomUserRequest$Outbound;
}
export declare function deleteRoomUserRequestToJSON(deleteRoomUserRequest: DeleteRoomUserRequest): string;
export declare function deleteRoomUserRequestFromJSON(jsonString: string): SafeParseResult<DeleteRoomUserRequest, SDKValidationError>;
/** @internal */
export declare const DeleteRoomUserResponse$inboundSchema: z.ZodType<DeleteRoomUserResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteRoomUserResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const DeleteRoomUserResponse$outboundSchema: z.ZodType<DeleteRoomUserResponse$Outbound, z.ZodTypeDef, DeleteRoomUserResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteRoomUserResponse$ {
    /** @deprecated use `DeleteRoomUserResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteRoomUserResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteRoomUserResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteRoomUserResponse$Outbound, z.ZodTypeDef, DeleteRoomUserResponse>;
    /** @deprecated use `DeleteRoomUserResponse$Outbound` instead. */
    type Outbound = DeleteRoomUserResponse$Outbound;
}
export declare function deleteRoomUserResponseToJSON(deleteRoomUserResponse: DeleteRoomUserResponse): string;
export declare function deleteRoomUserResponseFromJSON(jsonString: string): SafeParseResult<DeleteRoomUserResponse, SDKValidationError>;
//# sourceMappingURL=deleteroomuser.d.ts.map