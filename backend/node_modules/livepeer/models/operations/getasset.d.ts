import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetAssetRequest = {
    /**
     * ID of the asset
     */
    assetId: string;
};
export type GetAssetResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    asset?: components.Asset | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const GetAssetRequest$inboundSchema: z.ZodType<GetAssetRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAssetRequest$Outbound = {
    assetId: string;
};
/** @internal */
export declare const GetAssetRequest$outboundSchema: z.ZodType<GetAssetRequest$Outbound, z.ZodTypeDef, GetAssetRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAssetRequest$ {
    /** @deprecated use `GetAssetRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAssetRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAssetRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAssetRequest$Outbound, z.ZodTypeDef, GetAssetRequest>;
    /** @deprecated use `GetAssetRequest$Outbound` instead. */
    type Outbound = GetAssetRequest$Outbound;
}
export declare function getAssetRequestToJSON(getAssetRequest: GetAssetRequest): string;
export declare function getAssetRequestFromJSON(jsonString: string): SafeParseResult<GetAssetRequest, SDKValidationError>;
/** @internal */
export declare const GetAssetResponse$inboundSchema: z.ZodType<GetAssetResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAssetResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    asset?: components.Asset$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const GetAssetResponse$outboundSchema: z.ZodType<GetAssetResponse$Outbound, z.ZodTypeDef, GetAssetResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAssetResponse$ {
    /** @deprecated use `GetAssetResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAssetResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAssetResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAssetResponse$Outbound, z.ZodTypeDef, GetAssetResponse>;
    /** @deprecated use `GetAssetResponse$Outbound` instead. */
    type Outbound = GetAssetResponse$Outbound;
}
export declare function getAssetResponseToJSON(getAssetResponse: GetAssetResponse): string;
export declare function getAssetResponseFromJSON(jsonString: string): SafeParseResult<GetAssetResponse, SDKValidationError>;
//# sourceMappingURL=getasset.d.ts.map