import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetClipsRequest = {
    /**
     * ID of the parent stream or playbackId of parent stream
     */
    id: string;
};
export type GetClipsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    data?: Array<components.Asset> | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const GetClipsRequest$inboundSchema: z.ZodType<GetClipsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetClipsRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const GetClipsRequest$outboundSchema: z.ZodType<GetClipsRequest$Outbound, z.ZodTypeDef, GetClipsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetClipsRequest$ {
    /** @deprecated use `GetClipsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetClipsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetClipsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetClipsRequest$Outbound, z.ZodTypeDef, GetClipsRequest>;
    /** @deprecated use `GetClipsRequest$Outbound` instead. */
    type Outbound = GetClipsRequest$Outbound;
}
export declare function getClipsRequestToJSON(getClipsRequest: GetClipsRequest): string;
export declare function getClipsRequestFromJSON(jsonString: string): SafeParseResult<GetClipsRequest, SDKValidationError>;
/** @internal */
export declare const GetClipsResponse$inboundSchema: z.ZodType<GetClipsResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetClipsResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    data?: Array<components.Asset$Outbound> | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const GetClipsResponse$outboundSchema: z.ZodType<GetClipsResponse$Outbound, z.ZodTypeDef, GetClipsResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetClipsResponse$ {
    /** @deprecated use `GetClipsResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetClipsResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetClipsResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetClipsResponse$Outbound, z.ZodTypeDef, GetClipsResponse>;
    /** @deprecated use `GetClipsResponse$Outbound` instead. */
    type Outbound = GetClipsResponse$Outbound;
}
export declare function getClipsResponseToJSON(getClipsResponse: GetClipsResponse): string;
export declare function getClipsResponseFromJSON(jsonString: string): SafeParseResult<GetClipsResponse, SDKValidationError>;
//# sourceMappingURL=getclips.d.ts.map