"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetCreatorViewershipMetricsResponse$ = exports.GetCreatorViewershipMetricsResponse$outboundSchema = exports.GetCreatorViewershipMetricsResponse$inboundSchema = exports.GetCreatorViewershipMetricsRequest$ = exports.GetCreatorViewershipMetricsRequest$outboundSchema = exports.GetCreatorViewershipMetricsRequest$inboundSchema = exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$ = exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$outboundSchema = exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$inboundSchema = exports.QueryParamTimeStep$ = exports.QueryParamTimeStep$outboundSchema = exports.QueryParamTimeStep$inboundSchema = exports.QueryParamTo$ = exports.QueryParamTo$outboundSchema = exports.QueryParamTo$inboundSchema = exports.QueryParamFrom$ = exports.QueryParamFrom$outboundSchema = exports.QueryParamFrom$inboundSchema = exports.GetCreatorViewershipMetricsQueryParamBreakdownBy = exports.QueryParamTimeStep = void 0;
exports.queryParamFromToJSON = queryParamFromToJSON;
exports.queryParamFromFromJSON = queryParamFromFromJSON;
exports.queryParamToToJSON = queryParamToToJSON;
exports.queryParamToFromJSON = queryParamToFromJSON;
exports.getCreatorViewershipMetricsRequestToJSON = getCreatorViewershipMetricsRequestToJSON;
exports.getCreatorViewershipMetricsRequestFromJSON = getCreatorViewershipMetricsRequestFromJSON;
exports.getCreatorViewershipMetricsResponseToJSON = getCreatorViewershipMetricsResponseToJSON;
exports.getCreatorViewershipMetricsResponseFromJSON = getCreatorViewershipMetricsResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
/**
 * The time step to aggregate viewership metrics by
 */
var QueryParamTimeStep;
(function (QueryParamTimeStep) {
    QueryParamTimeStep["Hour"] = "hour";
    QueryParamTimeStep["Day"] = "day";
    QueryParamTimeStep["Week"] = "week";
    QueryParamTimeStep["Month"] = "month";
    QueryParamTimeStep["Year"] = "year";
})(QueryParamTimeStep || (exports.QueryParamTimeStep = QueryParamTimeStep = {}));
var GetCreatorViewershipMetricsQueryParamBreakdownBy;
(function (GetCreatorViewershipMetricsQueryParamBreakdownBy) {
    GetCreatorViewershipMetricsQueryParamBreakdownBy["DeviceType"] = "deviceType";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["Device"] = "device";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["Cpu"] = "cpu";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["Os"] = "os";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["Browser"] = "browser";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["BrowserEngine"] = "browserEngine";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["Continent"] = "continent";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["Country"] = "country";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["Subdivision"] = "subdivision";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["Timezone"] = "timezone";
    GetCreatorViewershipMetricsQueryParamBreakdownBy["ViewerId"] = "viewerId";
})(GetCreatorViewershipMetricsQueryParamBreakdownBy || (exports.GetCreatorViewershipMetricsQueryParamBreakdownBy = GetCreatorViewershipMetricsQueryParamBreakdownBy = {}));
/** @internal */
exports.QueryParamFrom$inboundSchema = z.union([
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
    z.number().int(),
]);
/** @internal */
exports.QueryParamFrom$outboundSchema = z.union([z.date().transform(v => v.toISOString()), z.number().int()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamFrom$;
(function (QueryParamFrom$) {
    /** @deprecated use `QueryParamFrom$inboundSchema` instead. */
    QueryParamFrom$.inboundSchema = exports.QueryParamFrom$inboundSchema;
    /** @deprecated use `QueryParamFrom$outboundSchema` instead. */
    QueryParamFrom$.outboundSchema = exports.QueryParamFrom$outboundSchema;
})(QueryParamFrom$ || (exports.QueryParamFrom$ = QueryParamFrom$ = {}));
function queryParamFromToJSON(queryParamFrom) {
    return JSON.stringify(exports.QueryParamFrom$outboundSchema.parse(queryParamFrom));
}
function queryParamFromFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamFrom$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamFrom' from JSON`);
}
/** @internal */
exports.QueryParamTo$inboundSchema = z.union([
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
    z.number().int(),
]);
/** @internal */
exports.QueryParamTo$outboundSchema = z.union([z.date().transform(v => v.toISOString()), z.number().int()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamTo$;
(function (QueryParamTo$) {
    /** @deprecated use `QueryParamTo$inboundSchema` instead. */
    QueryParamTo$.inboundSchema = exports.QueryParamTo$inboundSchema;
    /** @deprecated use `QueryParamTo$outboundSchema` instead. */
    QueryParamTo$.outboundSchema = exports.QueryParamTo$outboundSchema;
})(QueryParamTo$ || (exports.QueryParamTo$ = QueryParamTo$ = {}));
function queryParamToToJSON(queryParamTo) {
    return JSON.stringify(exports.QueryParamTo$outboundSchema.parse(queryParamTo));
}
function queryParamToFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.QueryParamTo$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'QueryParamTo' from JSON`);
}
/** @internal */
exports.QueryParamTimeStep$inboundSchema = z.nativeEnum(QueryParamTimeStep);
/** @internal */
exports.QueryParamTimeStep$outboundSchema = exports.QueryParamTimeStep$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamTimeStep$;
(function (QueryParamTimeStep$) {
    /** @deprecated use `QueryParamTimeStep$inboundSchema` instead. */
    QueryParamTimeStep$.inboundSchema = exports.QueryParamTimeStep$inboundSchema;
    /** @deprecated use `QueryParamTimeStep$outboundSchema` instead. */
    QueryParamTimeStep$.outboundSchema = exports.QueryParamTimeStep$outboundSchema;
})(QueryParamTimeStep$ || (exports.QueryParamTimeStep$ = QueryParamTimeStep$ = {}));
/** @internal */
exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$inboundSchema = z
    .nativeEnum(GetCreatorViewershipMetricsQueryParamBreakdownBy);
/** @internal */
exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$outboundSchema = exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetCreatorViewershipMetricsQueryParamBreakdownBy$;
(function (GetCreatorViewershipMetricsQueryParamBreakdownBy$) {
    /** @deprecated use `GetCreatorViewershipMetricsQueryParamBreakdownBy$inboundSchema` instead. */
    GetCreatorViewershipMetricsQueryParamBreakdownBy$.inboundSchema = exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$inboundSchema;
    /** @deprecated use `GetCreatorViewershipMetricsQueryParamBreakdownBy$outboundSchema` instead. */
    GetCreatorViewershipMetricsQueryParamBreakdownBy$.outboundSchema = exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$outboundSchema;
})(GetCreatorViewershipMetricsQueryParamBreakdownBy$ || (exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$ = GetCreatorViewershipMetricsQueryParamBreakdownBy$ = {}));
/** @internal */
exports.GetCreatorViewershipMetricsRequest$inboundSchema = z.object({
    from: z.union([
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
        z.number().int(),
    ]).optional(),
    to: z.union([
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
        z.number().int(),
    ]).optional(),
    timeStep: exports.QueryParamTimeStep$inboundSchema.optional(),
    assetId: z.string().optional(),
    streamId: z.string().optional(),
    creatorId: z.string().optional(),
    "breakdownBy[]": z.array(exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "breakdownBy[]": "breakdownBy",
    });
});
/** @internal */
exports.GetCreatorViewershipMetricsRequest$outboundSchema = z.object({
    from: z.union([z.date().transform(v => v.toISOString()), z.number().int()])
        .optional(),
    to: z.union([z.date().transform(v => v.toISOString()), z.number().int()])
        .optional(),
    timeStep: exports.QueryParamTimeStep$outboundSchema.optional(),
    assetId: z.string().optional(),
    streamId: z.string().optional(),
    creatorId: z.string().optional(),
    breakdownBy: z.array(exports.GetCreatorViewershipMetricsQueryParamBreakdownBy$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        breakdownBy: "breakdownBy[]",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetCreatorViewershipMetricsRequest$;
(function (GetCreatorViewershipMetricsRequest$) {
    /** @deprecated use `GetCreatorViewershipMetricsRequest$inboundSchema` instead. */
    GetCreatorViewershipMetricsRequest$.inboundSchema = exports.GetCreatorViewershipMetricsRequest$inboundSchema;
    /** @deprecated use `GetCreatorViewershipMetricsRequest$outboundSchema` instead. */
    GetCreatorViewershipMetricsRequest$.outboundSchema = exports.GetCreatorViewershipMetricsRequest$outboundSchema;
})(GetCreatorViewershipMetricsRequest$ || (exports.GetCreatorViewershipMetricsRequest$ = GetCreatorViewershipMetricsRequest$ = {}));
function getCreatorViewershipMetricsRequestToJSON(getCreatorViewershipMetricsRequest) {
    return JSON.stringify(exports.GetCreatorViewershipMetricsRequest$outboundSchema.parse(getCreatorViewershipMetricsRequest));
}
function getCreatorViewershipMetricsRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetCreatorViewershipMetricsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCreatorViewershipMetricsRequest' from JSON`);
}
/** @internal */
exports.GetCreatorViewershipMetricsResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    data: z.array(components.ViewershipMetric$inboundSchema).optional(),
    error: components.ErrorT$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
    });
});
/** @internal */
exports.GetCreatorViewershipMetricsResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    data: z.array(components.ViewershipMetric$outboundSchema).optional(),
    error: components.ErrorT$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetCreatorViewershipMetricsResponse$;
(function (GetCreatorViewershipMetricsResponse$) {
    /** @deprecated use `GetCreatorViewershipMetricsResponse$inboundSchema` instead. */
    GetCreatorViewershipMetricsResponse$.inboundSchema = exports.GetCreatorViewershipMetricsResponse$inboundSchema;
    /** @deprecated use `GetCreatorViewershipMetricsResponse$outboundSchema` instead. */
    GetCreatorViewershipMetricsResponse$.outboundSchema = exports.GetCreatorViewershipMetricsResponse$outboundSchema;
})(GetCreatorViewershipMetricsResponse$ || (exports.GetCreatorViewershipMetricsResponse$ = GetCreatorViewershipMetricsResponse$ = {}));
function getCreatorViewershipMetricsResponseToJSON(getCreatorViewershipMetricsResponse) {
    return JSON.stringify(exports.GetCreatorViewershipMetricsResponse$outboundSchema.parse(getCreatorViewershipMetricsResponse));
}
function getCreatorViewershipMetricsResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetCreatorViewershipMetricsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetCreatorViewershipMetricsResponse' from JSON`);
}
//# sourceMappingURL=getcreatorviewershipmetrics.js.map