import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetPublicViewershipMetricsRequest = {
    /**
     * The playback ID to filter the query results. This can be a canonical
     *
     * @remarks
     * playback ID from Livepeer assets or streams, or dStorage identifiers
     * for assets
     */
    playbackId: string;
};
/**
 * A simplified metric object about aggregate viewership of an
 *
 * @remarks
 * asset. Either playbackId or dStorageUrl will be set.
 */
export type GetPublicViewershipMetricsData = {
    /**
     * The playback ID associated with the metric.
     */
    playbackId?: string | undefined;
    /**
     * The URL of the distributed storage used for the asset
     */
    dStorageUrl?: string | undefined;
    /**
     * The number of views for the stream/asset.
     */
    viewCount?: number | undefined;
    /**
     * The total playtime in minutes for the stream/asset.
     */
    playtimeMins?: number | undefined;
};
export type GetPublicViewershipMetricsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * A single Metric object with the viewCount and playtimeMins metrics.
     */
    data?: GetPublicViewershipMetricsData | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const GetPublicViewershipMetricsRequest$inboundSchema: z.ZodType<GetPublicViewershipMetricsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetPublicViewershipMetricsRequest$Outbound = {
    playbackId: string;
};
/** @internal */
export declare const GetPublicViewershipMetricsRequest$outboundSchema: z.ZodType<GetPublicViewershipMetricsRequest$Outbound, z.ZodTypeDef, GetPublicViewershipMetricsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetPublicViewershipMetricsRequest$ {
    /** @deprecated use `GetPublicViewershipMetricsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetPublicViewershipMetricsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetPublicViewershipMetricsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetPublicViewershipMetricsRequest$Outbound, z.ZodTypeDef, GetPublicViewershipMetricsRequest>;
    /** @deprecated use `GetPublicViewershipMetricsRequest$Outbound` instead. */
    type Outbound = GetPublicViewershipMetricsRequest$Outbound;
}
export declare function getPublicViewershipMetricsRequestToJSON(getPublicViewershipMetricsRequest: GetPublicViewershipMetricsRequest): string;
export declare function getPublicViewershipMetricsRequestFromJSON(jsonString: string): SafeParseResult<GetPublicViewershipMetricsRequest, SDKValidationError>;
/** @internal */
export declare const GetPublicViewershipMetricsData$inboundSchema: z.ZodType<GetPublicViewershipMetricsData, z.ZodTypeDef, unknown>;
/** @internal */
export type GetPublicViewershipMetricsData$Outbound = {
    playbackId?: string | undefined;
    dStorageUrl?: string | undefined;
    viewCount?: number | undefined;
    playtimeMins?: number | undefined;
};
/** @internal */
export declare const GetPublicViewershipMetricsData$outboundSchema: z.ZodType<GetPublicViewershipMetricsData$Outbound, z.ZodTypeDef, GetPublicViewershipMetricsData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetPublicViewershipMetricsData$ {
    /** @deprecated use `GetPublicViewershipMetricsData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetPublicViewershipMetricsData, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetPublicViewershipMetricsData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetPublicViewershipMetricsData$Outbound, z.ZodTypeDef, GetPublicViewershipMetricsData>;
    /** @deprecated use `GetPublicViewershipMetricsData$Outbound` instead. */
    type Outbound = GetPublicViewershipMetricsData$Outbound;
}
export declare function getPublicViewershipMetricsDataToJSON(getPublicViewershipMetricsData: GetPublicViewershipMetricsData): string;
export declare function getPublicViewershipMetricsDataFromJSON(jsonString: string): SafeParseResult<GetPublicViewershipMetricsData, SDKValidationError>;
/** @internal */
export declare const GetPublicViewershipMetricsResponse$inboundSchema: z.ZodType<GetPublicViewershipMetricsResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetPublicViewershipMetricsResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    data?: GetPublicViewershipMetricsData$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const GetPublicViewershipMetricsResponse$outboundSchema: z.ZodType<GetPublicViewershipMetricsResponse$Outbound, z.ZodTypeDef, GetPublicViewershipMetricsResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetPublicViewershipMetricsResponse$ {
    /** @deprecated use `GetPublicViewershipMetricsResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetPublicViewershipMetricsResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetPublicViewershipMetricsResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetPublicViewershipMetricsResponse$Outbound, z.ZodTypeDef, GetPublicViewershipMetricsResponse>;
    /** @deprecated use `GetPublicViewershipMetricsResponse$Outbound` instead. */
    type Outbound = GetPublicViewershipMetricsResponse$Outbound;
}
export declare function getPublicViewershipMetricsResponseToJSON(getPublicViewershipMetricsResponse: GetPublicViewershipMetricsResponse): string;
export declare function getPublicViewershipMetricsResponseFromJSON(jsonString: string): SafeParseResult<GetPublicViewershipMetricsResponse, SDKValidationError>;
//# sourceMappingURL=getpublicviewershipmetrics.d.ts.map