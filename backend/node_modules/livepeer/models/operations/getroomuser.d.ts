import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetRoomUserRequest = {
    id: string;
    userId: string;
};
export type GetRoomUserResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    getRoomUserResponse?: components.GetRoomUserResponse | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const GetRoomUserRequest$inboundSchema: z.ZodType<GetRoomUserRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRoomUserRequest$Outbound = {
    id: string;
    userId: string;
};
/** @internal */
export declare const GetRoomUserRequest$outboundSchema: z.ZodType<GetRoomUserRequest$Outbound, z.ZodTypeDef, GetRoomUserRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRoomUserRequest$ {
    /** @deprecated use `GetRoomUserRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRoomUserRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRoomUserRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRoomUserRequest$Outbound, z.ZodTypeDef, GetRoomUserRequest>;
    /** @deprecated use `GetRoomUserRequest$Outbound` instead. */
    type Outbound = GetRoomUserRequest$Outbound;
}
export declare function getRoomUserRequestToJSON(getRoomUserRequest: GetRoomUserRequest): string;
export declare function getRoomUserRequestFromJSON(jsonString: string): SafeParseResult<GetRoomUserRequest, SDKValidationError>;
/** @internal */
export declare const GetRoomUserResponse$inboundSchema: z.ZodType<GetRoomUserResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRoomUserResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    "get-room-user-response"?: components.GetRoomUserResponse$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const GetRoomUserResponse$outboundSchema: z.ZodType<GetRoomUserResponse$Outbound, z.ZodTypeDef, GetRoomUserResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRoomUserResponse$ {
    /** @deprecated use `GetRoomUserResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRoomUserResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRoomUserResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRoomUserResponse$Outbound, z.ZodTypeDef, GetRoomUserResponse>;
    /** @deprecated use `GetRoomUserResponse$Outbound` instead. */
    type Outbound = GetRoomUserResponse$Outbound;
}
export declare function getRoomUserResponseToJSON(getRoomUserResponse: GetRoomUserResponse): string;
export declare function getRoomUserResponseFromJSON(jsonString: string): SafeParseResult<GetRoomUserResponse, SDKValidationError>;
//# sourceMappingURL=getroomuser.d.ts.map