import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetSessionRequest = {
    /**
     * ID of the session
     */
    id: string;
};
export type GetSessionResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    session?: components.Session | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const GetSessionRequest$inboundSchema: z.ZodType<GetSessionRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetSessionRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const GetSessionRequest$outboundSchema: z.ZodType<GetSessionRequest$Outbound, z.ZodTypeDef, GetSessionRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetSessionRequest$ {
    /** @deprecated use `GetSessionRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetSessionRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetSessionRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetSessionRequest$Outbound, z.ZodTypeDef, GetSessionRequest>;
    /** @deprecated use `GetSessionRequest$Outbound` instead. */
    type Outbound = GetSessionRequest$Outbound;
}
export declare function getSessionRequestToJSON(getSessionRequest: GetSessionRequest): string;
export declare function getSessionRequestFromJSON(jsonString: string): SafeParseResult<GetSessionRequest, SDKValidationError>;
/** @internal */
export declare const GetSessionResponse$inboundSchema: z.ZodType<GetSessionResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetSessionResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    session?: components.Session$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const GetSessionResponse$outboundSchema: z.ZodType<GetSessionResponse$Outbound, z.ZodTypeDef, GetSessionResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetSessionResponse$ {
    /** @deprecated use `GetSessionResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetSessionResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetSessionResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetSessionResponse$Outbound, z.ZodTypeDef, GetSessionResponse>;
    /** @deprecated use `GetSessionResponse$Outbound` instead. */
    type Outbound = GetSessionResponse$Outbound;
}
export declare function getSessionResponseToJSON(getSessionResponse: GetSessionResponse): string;
export declare function getSessionResponseFromJSON(jsonString: string): SafeParseResult<GetSessionResponse, SDKValidationError>;
//# sourceMappingURL=getsession.d.ts.map