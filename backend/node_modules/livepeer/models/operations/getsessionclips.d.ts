import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetSessionClipsRequest = {
    /**
     * ID of the parent session
     */
    id: string;
};
export type GetSessionClipsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    data?: Array<components.Asset> | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const GetSessionClipsRequest$inboundSchema: z.ZodType<GetSessionClipsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetSessionClipsRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const GetSessionClipsRequest$outboundSchema: z.ZodType<GetSessionClipsRequest$Outbound, z.ZodTypeDef, GetSessionClipsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetSessionClipsRequest$ {
    /** @deprecated use `GetSessionClipsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetSessionClipsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetSessionClipsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetSessionClipsRequest$Outbound, z.ZodTypeDef, GetSessionClipsRequest>;
    /** @deprecated use `GetSessionClipsRequest$Outbound` instead. */
    type Outbound = GetSessionClipsRequest$Outbound;
}
export declare function getSessionClipsRequestToJSON(getSessionClipsRequest: GetSessionClipsRequest): string;
export declare function getSessionClipsRequestFromJSON(jsonString: string): SafeParseResult<GetSessionClipsRequest, SDKValidationError>;
/** @internal */
export declare const GetSessionClipsResponse$inboundSchema: z.ZodType<GetSessionClipsResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetSessionClipsResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    data?: Array<components.Asset$Outbound> | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const GetSessionClipsResponse$outboundSchema: z.ZodType<GetSessionClipsResponse$Outbound, z.ZodTypeDef, GetSessionClipsResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetSessionClipsResponse$ {
    /** @deprecated use `GetSessionClipsResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetSessionClipsResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetSessionClipsResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetSessionClipsResponse$Outbound, z.ZodTypeDef, GetSessionClipsResponse>;
    /** @deprecated use `GetSessionClipsResponse$Outbound` instead. */
    type Outbound = GetSessionClipsResponse$Outbound;
}
export declare function getSessionClipsResponseToJSON(getSessionClipsResponse: GetSessionClipsResponse): string;
export declare function getSessionClipsResponseFromJSON(jsonString: string): SafeParseResult<GetSessionClipsResponse, SDKValidationError>;
//# sourceMappingURL=getsessionclips.d.ts.map