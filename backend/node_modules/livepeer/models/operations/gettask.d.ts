import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetTaskRequest = {
    /**
     * ID of the task
     */
    taskId: string;
};
export type GetTaskResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    task?: components.Task | undefined;
};
/** @internal */
export declare const GetTaskRequest$inboundSchema: z.ZodType<GetTaskRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetTaskRequest$Outbound = {
    taskId: string;
};
/** @internal */
export declare const GetTaskRequest$outboundSchema: z.ZodType<GetTaskRequest$Outbound, z.ZodTypeDef, GetTaskRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetTaskRequest$ {
    /** @deprecated use `GetTaskRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetTaskRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetTaskRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetTaskRequest$Outbound, z.ZodTypeDef, GetTaskRequest>;
    /** @deprecated use `GetTaskRequest$Outbound` instead. */
    type Outbound = GetTaskRequest$Outbound;
}
export declare function getTaskRequestToJSON(getTaskRequest: GetTaskRequest): string;
export declare function getTaskRequestFromJSON(jsonString: string): SafeParseResult<GetTaskRequest, SDKValidationError>;
/** @internal */
export declare const GetTaskResponse$inboundSchema: z.ZodType<GetTaskResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GetTaskResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    task?: components.Task$Outbound | undefined;
};
/** @internal */
export declare const GetTaskResponse$outboundSchema: z.ZodType<GetTaskResponse$Outbound, z.ZodTypeDef, GetTaskResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetTaskResponse$ {
    /** @deprecated use `GetTaskResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetTaskResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetTaskResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetTaskResponse$Outbound, z.ZodTypeDef, GetTaskResponse>;
    /** @deprecated use `GetTaskResponse$Outbound` instead. */
    type Outbound = GetTaskResponse$Outbound;
}
export declare function getTaskResponseToJSON(getTaskResponse: GetTaskResponse): string;
export declare function getTaskResponseFromJSON(jsonString: string): SafeParseResult<GetTaskResponse, SDKValidationError>;
//# sourceMappingURL=gettask.d.ts.map