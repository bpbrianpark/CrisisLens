"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetUsageMetricsResponse$ = exports.GetUsageMetricsResponse$outboundSchema = exports.GetUsageMetricsResponse$inboundSchema = exports.GetUsageMetricsRequest$ = exports.GetUsageMetricsRequest$outboundSchema = exports.GetUsageMetricsRequest$inboundSchema = exports.GetUsageMetricsQueryParamBreakdownBy$ = exports.GetUsageMetricsQueryParamBreakdownBy$outboundSchema = exports.GetUsageMetricsQueryParamBreakdownBy$inboundSchema = exports.GetUsageMetricsQueryParamTimeStep$ = exports.GetUsageMetricsQueryParamTimeStep$outboundSchema = exports.GetUsageMetricsQueryParamTimeStep$inboundSchema = exports.GetUsageMetricsQueryParamBreakdownBy = exports.GetUsageMetricsQueryParamTimeStep = void 0;
exports.getUsageMetricsRequestToJSON = getUsageMetricsRequestToJSON;
exports.getUsageMetricsRequestFromJSON = getUsageMetricsRequestFromJSON;
exports.getUsageMetricsResponseToJSON = getUsageMetricsResponseToJSON;
exports.getUsageMetricsResponseFromJSON = getUsageMetricsResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
/**
 * The time step to aggregate viewership metrics by
 *
 * @remarks
 */
var GetUsageMetricsQueryParamTimeStep;
(function (GetUsageMetricsQueryParamTimeStep) {
    GetUsageMetricsQueryParamTimeStep["Hour"] = "hour";
    GetUsageMetricsQueryParamTimeStep["Day"] = "day";
})(GetUsageMetricsQueryParamTimeStep || (exports.GetUsageMetricsQueryParamTimeStep = GetUsageMetricsQueryParamTimeStep = {}));
var GetUsageMetricsQueryParamBreakdownBy;
(function (GetUsageMetricsQueryParamBreakdownBy) {
    GetUsageMetricsQueryParamBreakdownBy["CreatorId"] = "creatorId";
})(GetUsageMetricsQueryParamBreakdownBy || (exports.GetUsageMetricsQueryParamBreakdownBy = GetUsageMetricsQueryParamBreakdownBy = {}));
/** @internal */
exports.GetUsageMetricsQueryParamTimeStep$inboundSchema = z.nativeEnum(GetUsageMetricsQueryParamTimeStep);
/** @internal */
exports.GetUsageMetricsQueryParamTimeStep$outboundSchema = exports.GetUsageMetricsQueryParamTimeStep$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetUsageMetricsQueryParamTimeStep$;
(function (GetUsageMetricsQueryParamTimeStep$) {
    /** @deprecated use `GetUsageMetricsQueryParamTimeStep$inboundSchema` instead. */
    GetUsageMetricsQueryParamTimeStep$.inboundSchema = exports.GetUsageMetricsQueryParamTimeStep$inboundSchema;
    /** @deprecated use `GetUsageMetricsQueryParamTimeStep$outboundSchema` instead. */
    GetUsageMetricsQueryParamTimeStep$.outboundSchema = exports.GetUsageMetricsQueryParamTimeStep$outboundSchema;
})(GetUsageMetricsQueryParamTimeStep$ || (exports.GetUsageMetricsQueryParamTimeStep$ = GetUsageMetricsQueryParamTimeStep$ = {}));
/** @internal */
exports.GetUsageMetricsQueryParamBreakdownBy$inboundSchema = z.nativeEnum(GetUsageMetricsQueryParamBreakdownBy);
/** @internal */
exports.GetUsageMetricsQueryParamBreakdownBy$outboundSchema = exports.GetUsageMetricsQueryParamBreakdownBy$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetUsageMetricsQueryParamBreakdownBy$;
(function (GetUsageMetricsQueryParamBreakdownBy$) {
    /** @deprecated use `GetUsageMetricsQueryParamBreakdownBy$inboundSchema` instead. */
    GetUsageMetricsQueryParamBreakdownBy$.inboundSchema = exports.GetUsageMetricsQueryParamBreakdownBy$inboundSchema;
    /** @deprecated use `GetUsageMetricsQueryParamBreakdownBy$outboundSchema` instead. */
    GetUsageMetricsQueryParamBreakdownBy$.outboundSchema = exports.GetUsageMetricsQueryParamBreakdownBy$outboundSchema;
})(GetUsageMetricsQueryParamBreakdownBy$ || (exports.GetUsageMetricsQueryParamBreakdownBy$ = GetUsageMetricsQueryParamBreakdownBy$ = {}));
/** @internal */
exports.GetUsageMetricsRequest$inboundSchema = z.object({
    from: z.number().int().optional(),
    to: z.number().int().optional(),
    timeStep: exports.GetUsageMetricsQueryParamTimeStep$inboundSchema.optional(),
    creatorId: z.string().optional(),
    "breakdownBy[]": z.array(exports.GetUsageMetricsQueryParamBreakdownBy$inboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "breakdownBy[]": "breakdownBy",
    });
});
/** @internal */
exports.GetUsageMetricsRequest$outboundSchema = z.object({
    from: z.number().int().optional(),
    to: z.number().int().optional(),
    timeStep: exports.GetUsageMetricsQueryParamTimeStep$outboundSchema.optional(),
    creatorId: z.string().optional(),
    breakdownBy: z.array(exports.GetUsageMetricsQueryParamBreakdownBy$outboundSchema)
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        breakdownBy: "breakdownBy[]",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetUsageMetricsRequest$;
(function (GetUsageMetricsRequest$) {
    /** @deprecated use `GetUsageMetricsRequest$inboundSchema` instead. */
    GetUsageMetricsRequest$.inboundSchema = exports.GetUsageMetricsRequest$inboundSchema;
    /** @deprecated use `GetUsageMetricsRequest$outboundSchema` instead. */
    GetUsageMetricsRequest$.outboundSchema = exports.GetUsageMetricsRequest$outboundSchema;
})(GetUsageMetricsRequest$ || (exports.GetUsageMetricsRequest$ = GetUsageMetricsRequest$ = {}));
function getUsageMetricsRequestToJSON(getUsageMetricsRequest) {
    return JSON.stringify(exports.GetUsageMetricsRequest$outboundSchema.parse(getUsageMetricsRequest));
}
function getUsageMetricsRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetUsageMetricsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetUsageMetricsRequest' from JSON`);
}
/** @internal */
exports.GetUsageMetricsResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    "usage-metric": components.UsageMetric$inboundSchema.optional(),
    error: components.ErrorT$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "usage-metric": "usageMetric",
    });
});
/** @internal */
exports.GetUsageMetricsResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    usageMetric: components.UsageMetric$outboundSchema.optional(),
    error: components.ErrorT$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        usageMetric: "usage-metric",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetUsageMetricsResponse$;
(function (GetUsageMetricsResponse$) {
    /** @deprecated use `GetUsageMetricsResponse$inboundSchema` instead. */
    GetUsageMetricsResponse$.inboundSchema = exports.GetUsageMetricsResponse$inboundSchema;
    /** @deprecated use `GetUsageMetricsResponse$outboundSchema` instead. */
    GetUsageMetricsResponse$.outboundSchema = exports.GetUsageMetricsResponse$outboundSchema;
})(GetUsageMetricsResponse$ || (exports.GetUsageMetricsResponse$ = GetUsageMetricsResponse$ = {}));
function getUsageMetricsResponseToJSON(getUsageMetricsResponse) {
    return JSON.stringify(exports.GetUsageMetricsResponse$outboundSchema.parse(getUsageMetricsResponse));
}
function getUsageMetricsResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetUsageMetricsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetUsageMetricsResponse' from JSON`);
}
//# sourceMappingURL=getusagemetrics.js.map