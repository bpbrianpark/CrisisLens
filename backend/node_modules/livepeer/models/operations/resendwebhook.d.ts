import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ResendWebhookRequest = {
    id: string;
    logId: string;
};
export type ResendWebhookResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    webhookLog?: components.WebhookLog | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const ResendWebhookRequest$inboundSchema: z.ZodType<ResendWebhookRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ResendWebhookRequest$Outbound = {
    id: string;
    logId: string;
};
/** @internal */
export declare const ResendWebhookRequest$outboundSchema: z.ZodType<ResendWebhookRequest$Outbound, z.ZodTypeDef, ResendWebhookRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResendWebhookRequest$ {
    /** @deprecated use `ResendWebhookRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResendWebhookRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResendWebhookRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResendWebhookRequest$Outbound, z.ZodTypeDef, ResendWebhookRequest>;
    /** @deprecated use `ResendWebhookRequest$Outbound` instead. */
    type Outbound = ResendWebhookRequest$Outbound;
}
export declare function resendWebhookRequestToJSON(resendWebhookRequest: ResendWebhookRequest): string;
export declare function resendWebhookRequestFromJSON(jsonString: string): SafeParseResult<ResendWebhookRequest, SDKValidationError>;
/** @internal */
export declare const ResendWebhookResponse$inboundSchema: z.ZodType<ResendWebhookResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type ResendWebhookResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    "webhook-log"?: components.WebhookLog$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const ResendWebhookResponse$outboundSchema: z.ZodType<ResendWebhookResponse$Outbound, z.ZodTypeDef, ResendWebhookResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResendWebhookResponse$ {
    /** @deprecated use `ResendWebhookResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResendWebhookResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResendWebhookResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResendWebhookResponse$Outbound, z.ZodTypeDef, ResendWebhookResponse>;
    /** @deprecated use `ResendWebhookResponse$Outbound` instead. */
    type Outbound = ResendWebhookResponse$Outbound;
}
export declare function resendWebhookResponseToJSON(resendWebhookResponse: ResendWebhookResponse): string;
export declare function resendWebhookResponseFromJSON(jsonString: string): SafeParseResult<ResendWebhookResponse, SDKValidationError>;
//# sourceMappingURL=resendwebhook.d.ts.map