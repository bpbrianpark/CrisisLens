import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type StartPullStreamRequest = {
    /**
     * ID of the stream
     */
    id: string;
};
export type StartPullStreamResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const StartPullStreamRequest$inboundSchema: z.ZodType<StartPullStreamRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type StartPullStreamRequest$Outbound = {
    id: string;
};
/** @internal */
export declare const StartPullStreamRequest$outboundSchema: z.ZodType<StartPullStreamRequest$Outbound, z.ZodTypeDef, StartPullStreamRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace StartPullStreamRequest$ {
    /** @deprecated use `StartPullStreamRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<StartPullStreamRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `StartPullStreamRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<StartPullStreamRequest$Outbound, z.ZodTypeDef, StartPullStreamRequest>;
    /** @deprecated use `StartPullStreamRequest$Outbound` instead. */
    type Outbound = StartPullStreamRequest$Outbound;
}
export declare function startPullStreamRequestToJSON(startPullStreamRequest: StartPullStreamRequest): string;
export declare function startPullStreamRequestFromJSON(jsonString: string): SafeParseResult<StartPullStreamRequest, SDKValidationError>;
/** @internal */
export declare const StartPullStreamResponse$inboundSchema: z.ZodType<StartPullStreamResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type StartPullStreamResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const StartPullStreamResponse$outboundSchema: z.ZodType<StartPullStreamResponse$Outbound, z.ZodTypeDef, StartPullStreamResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace StartPullStreamResponse$ {
    /** @deprecated use `StartPullStreamResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<StartPullStreamResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `StartPullStreamResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<StartPullStreamResponse$Outbound, z.ZodTypeDef, StartPullStreamResponse>;
    /** @deprecated use `StartPullStreamResponse$Outbound` instead. */
    type Outbound = StartPullStreamResponse$Outbound;
}
export declare function startPullStreamResponseToJSON(startPullStreamResponse: StartPullStreamResponse): string;
export declare function startPullStreamResponseFromJSON(jsonString: string): SafeParseResult<StartPullStreamResponse, SDKValidationError>;
//# sourceMappingURL=startpullstream.d.ts.map