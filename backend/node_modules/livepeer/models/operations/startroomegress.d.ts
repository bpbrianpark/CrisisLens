import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type StartRoomEgressRequest = {
    id: string;
    roomEgressPayload: components.RoomEgressPayload;
};
export type StartRoomEgressResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const StartRoomEgressRequest$inboundSchema: z.ZodType<StartRoomEgressRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type StartRoomEgressRequest$Outbound = {
    id: string;
    "room-egress-payload": components.RoomEgressPayload$Outbound;
};
/** @internal */
export declare const StartRoomEgressRequest$outboundSchema: z.ZodType<StartRoomEgressRequest$Outbound, z.ZodTypeDef, StartRoomEgressRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace StartRoomEgressRequest$ {
    /** @deprecated use `StartRoomEgressRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<StartRoomEgressRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `StartRoomEgressRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<StartRoomEgressRequest$Outbound, z.ZodTypeDef, StartRoomEgressRequest>;
    /** @deprecated use `StartRoomEgressRequest$Outbound` instead. */
    type Outbound = StartRoomEgressRequest$Outbound;
}
export declare function startRoomEgressRequestToJSON(startRoomEgressRequest: StartRoomEgressRequest): string;
export declare function startRoomEgressRequestFromJSON(jsonString: string): SafeParseResult<StartRoomEgressRequest, SDKValidationError>;
/** @internal */
export declare const StartRoomEgressResponse$inboundSchema: z.ZodType<StartRoomEgressResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type StartRoomEgressResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const StartRoomEgressResponse$outboundSchema: z.ZodType<StartRoomEgressResponse$Outbound, z.ZodTypeDef, StartRoomEgressResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace StartRoomEgressResponse$ {
    /** @deprecated use `StartRoomEgressResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<StartRoomEgressResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `StartRoomEgressResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<StartRoomEgressResponse$Outbound, z.ZodTypeDef, StartRoomEgressResponse>;
    /** @deprecated use `StartRoomEgressResponse$Outbound` instead. */
    type Outbound = StartRoomEgressResponse$Outbound;
}
export declare function startRoomEgressResponseToJSON(startRoomEgressResponse: StartRoomEgressResponse): string;
export declare function startRoomEgressResponseFromJSON(jsonString: string): SafeParseResult<StartRoomEgressResponse, SDKValidationError>;
//# sourceMappingURL=startroomegress.d.ts.map