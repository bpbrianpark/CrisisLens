import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UpdateAssetRequest = {
    /**
     * ID of the asset
     */
    assetId: string;
    assetPatchPayload: components.AssetPatchPayload;
};
export type UpdateAssetResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    asset?: components.Asset | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const UpdateAssetRequest$inboundSchema: z.ZodType<UpdateAssetRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateAssetRequest$Outbound = {
    assetId: string;
    "asset-patch-payload": components.AssetPatchPayload$Outbound;
};
/** @internal */
export declare const UpdateAssetRequest$outboundSchema: z.ZodType<UpdateAssetRequest$Outbound, z.ZodTypeDef, UpdateAssetRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateAssetRequest$ {
    /** @deprecated use `UpdateAssetRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateAssetRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateAssetRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateAssetRequest$Outbound, z.ZodTypeDef, UpdateAssetRequest>;
    /** @deprecated use `UpdateAssetRequest$Outbound` instead. */
    type Outbound = UpdateAssetRequest$Outbound;
}
export declare function updateAssetRequestToJSON(updateAssetRequest: UpdateAssetRequest): string;
export declare function updateAssetRequestFromJSON(jsonString: string): SafeParseResult<UpdateAssetRequest, SDKValidationError>;
/** @internal */
export declare const UpdateAssetResponse$inboundSchema: z.ZodType<UpdateAssetResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateAssetResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    asset?: components.Asset$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const UpdateAssetResponse$outboundSchema: z.ZodType<UpdateAssetResponse$Outbound, z.ZodTypeDef, UpdateAssetResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateAssetResponse$ {
    /** @deprecated use `UpdateAssetResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateAssetResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateAssetResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateAssetResponse$Outbound, z.ZodTypeDef, UpdateAssetResponse>;
    /** @deprecated use `UpdateAssetResponse$Outbound` instead. */
    type Outbound = UpdateAssetResponse$Outbound;
}
export declare function updateAssetResponseToJSON(updateAssetResponse: UpdateAssetResponse): string;
export declare function updateAssetResponseFromJSON(jsonString: string): SafeParseResult<UpdateAssetResponse, SDKValidationError>;
//# sourceMappingURL=updateasset.d.ts.map