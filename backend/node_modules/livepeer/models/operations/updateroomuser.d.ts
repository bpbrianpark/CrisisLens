import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UpdateRoomUserRequest = {
    id: string;
    userId: string;
    roomUserUpdatePayload: components.RoomUserUpdatePayload;
};
export type UpdateRoomUserResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const UpdateRoomUserRequest$inboundSchema: z.ZodType<UpdateRoomUserRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateRoomUserRequest$Outbound = {
    id: string;
    userId: string;
    "room-user-update-payload": components.RoomUserUpdatePayload$Outbound;
};
/** @internal */
export declare const UpdateRoomUserRequest$outboundSchema: z.ZodType<UpdateRoomUserRequest$Outbound, z.ZodTypeDef, UpdateRoomUserRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateRoomUserRequest$ {
    /** @deprecated use `UpdateRoomUserRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateRoomUserRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateRoomUserRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateRoomUserRequest$Outbound, z.ZodTypeDef, UpdateRoomUserRequest>;
    /** @deprecated use `UpdateRoomUserRequest$Outbound` instead. */
    type Outbound = UpdateRoomUserRequest$Outbound;
}
export declare function updateRoomUserRequestToJSON(updateRoomUserRequest: UpdateRoomUserRequest): string;
export declare function updateRoomUserRequestFromJSON(jsonString: string): SafeParseResult<UpdateRoomUserRequest, SDKValidationError>;
/** @internal */
export declare const UpdateRoomUserResponse$inboundSchema: z.ZodType<UpdateRoomUserResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateRoomUserResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const UpdateRoomUserResponse$outboundSchema: z.ZodType<UpdateRoomUserResponse$Outbound, z.ZodTypeDef, UpdateRoomUserResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateRoomUserResponse$ {
    /** @deprecated use `UpdateRoomUserResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateRoomUserResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateRoomUserResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateRoomUserResponse$Outbound, z.ZodTypeDef, UpdateRoomUserResponse>;
    /** @deprecated use `UpdateRoomUserResponse$Outbound` instead. */
    type Outbound = UpdateRoomUserResponse$Outbound;
}
export declare function updateRoomUserResponseToJSON(updateRoomUserResponse: UpdateRoomUserResponse): string;
export declare function updateRoomUserResponseFromJSON(jsonString: string): SafeParseResult<UpdateRoomUserResponse, SDKValidationError>;
//# sourceMappingURL=updateroomuser.d.ts.map