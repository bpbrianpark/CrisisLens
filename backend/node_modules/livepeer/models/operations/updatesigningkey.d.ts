import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UpdateSigningKeyRequestBody = {
    disabled?: boolean | undefined;
    name?: string | undefined;
};
export type UpdateSigningKeyRequest = {
    /**
     * ID of the signing key
     */
    keyId: string;
    requestBody: UpdateSigningKeyRequestBody;
};
export type UpdateSigningKeyResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const UpdateSigningKeyRequestBody$inboundSchema: z.ZodType<UpdateSigningKeyRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateSigningKeyRequestBody$Outbound = {
    disabled?: boolean | undefined;
    name?: string | undefined;
};
/** @internal */
export declare const UpdateSigningKeyRequestBody$outboundSchema: z.ZodType<UpdateSigningKeyRequestBody$Outbound, z.ZodTypeDef, UpdateSigningKeyRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateSigningKeyRequestBody$ {
    /** @deprecated use `UpdateSigningKeyRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateSigningKeyRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateSigningKeyRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateSigningKeyRequestBody$Outbound, z.ZodTypeDef, UpdateSigningKeyRequestBody>;
    /** @deprecated use `UpdateSigningKeyRequestBody$Outbound` instead. */
    type Outbound = UpdateSigningKeyRequestBody$Outbound;
}
export declare function updateSigningKeyRequestBodyToJSON(updateSigningKeyRequestBody: UpdateSigningKeyRequestBody): string;
export declare function updateSigningKeyRequestBodyFromJSON(jsonString: string): SafeParseResult<UpdateSigningKeyRequestBody, SDKValidationError>;
/** @internal */
export declare const UpdateSigningKeyRequest$inboundSchema: z.ZodType<UpdateSigningKeyRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateSigningKeyRequest$Outbound = {
    keyId: string;
    RequestBody: UpdateSigningKeyRequestBody$Outbound;
};
/** @internal */
export declare const UpdateSigningKeyRequest$outboundSchema: z.ZodType<UpdateSigningKeyRequest$Outbound, z.ZodTypeDef, UpdateSigningKeyRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateSigningKeyRequest$ {
    /** @deprecated use `UpdateSigningKeyRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateSigningKeyRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateSigningKeyRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateSigningKeyRequest$Outbound, z.ZodTypeDef, UpdateSigningKeyRequest>;
    /** @deprecated use `UpdateSigningKeyRequest$Outbound` instead. */
    type Outbound = UpdateSigningKeyRequest$Outbound;
}
export declare function updateSigningKeyRequestToJSON(updateSigningKeyRequest: UpdateSigningKeyRequest): string;
export declare function updateSigningKeyRequestFromJSON(jsonString: string): SafeParseResult<UpdateSigningKeyRequest, SDKValidationError>;
/** @internal */
export declare const UpdateSigningKeyResponse$inboundSchema: z.ZodType<UpdateSigningKeyResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateSigningKeyResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const UpdateSigningKeyResponse$outboundSchema: z.ZodType<UpdateSigningKeyResponse$Outbound, z.ZodTypeDef, UpdateSigningKeyResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateSigningKeyResponse$ {
    /** @deprecated use `UpdateSigningKeyResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateSigningKeyResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateSigningKeyResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateSigningKeyResponse$Outbound, z.ZodTypeDef, UpdateSigningKeyResponse>;
    /** @deprecated use `UpdateSigningKeyResponse$Outbound` instead. */
    type Outbound = UpdateSigningKeyResponse$Outbound;
}
export declare function updateSigningKeyResponseToJSON(updateSigningKeyResponse: UpdateSigningKeyResponse): string;
export declare function updateSigningKeyResponseFromJSON(jsonString: string): SafeParseResult<UpdateSigningKeyResponse, SDKValidationError>;
//# sourceMappingURL=updatesigningkey.d.ts.map