import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type UploadAssetAssetTask = {
    id: string;
};
/**
 * Upload started
 */
export type UploadAssetDataOutput = {
    asset: components.Asset;
    task: UploadAssetAssetTask;
};
export type UploadAssetTask = {
    id: string;
};
/**
 * Upload in progress
 */
export type UploadAssetData = {
    asset: components.Asset;
    task: UploadAssetTask;
};
export type UploadAssetResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Upload in progress
     */
    twoHundredApplicationJsonData?: UploadAssetData | undefined;
    /**
     * Upload started
     */
    twoHundredAndOneApplicationJsonData?: UploadAssetDataOutput | undefined;
    /**
     * Error
     */
    error?: components.ErrorT | undefined;
};
/** @internal */
export declare const UploadAssetAssetTask$inboundSchema: z.ZodType<UploadAssetAssetTask, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadAssetAssetTask$Outbound = {
    id: string;
};
/** @internal */
export declare const UploadAssetAssetTask$outboundSchema: z.ZodType<UploadAssetAssetTask$Outbound, z.ZodTypeDef, UploadAssetAssetTask>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadAssetAssetTask$ {
    /** @deprecated use `UploadAssetAssetTask$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadAssetAssetTask, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadAssetAssetTask$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadAssetAssetTask$Outbound, z.ZodTypeDef, UploadAssetAssetTask>;
    /** @deprecated use `UploadAssetAssetTask$Outbound` instead. */
    type Outbound = UploadAssetAssetTask$Outbound;
}
export declare function uploadAssetAssetTaskToJSON(uploadAssetAssetTask: UploadAssetAssetTask): string;
export declare function uploadAssetAssetTaskFromJSON(jsonString: string): SafeParseResult<UploadAssetAssetTask, SDKValidationError>;
/** @internal */
export declare const UploadAssetDataOutput$inboundSchema: z.ZodType<UploadAssetDataOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadAssetDataOutput$Outbound = {
    asset: components.Asset$Outbound;
    task: UploadAssetAssetTask$Outbound;
};
/** @internal */
export declare const UploadAssetDataOutput$outboundSchema: z.ZodType<UploadAssetDataOutput$Outbound, z.ZodTypeDef, UploadAssetDataOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadAssetDataOutput$ {
    /** @deprecated use `UploadAssetDataOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadAssetDataOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadAssetDataOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadAssetDataOutput$Outbound, z.ZodTypeDef, UploadAssetDataOutput>;
    /** @deprecated use `UploadAssetDataOutput$Outbound` instead. */
    type Outbound = UploadAssetDataOutput$Outbound;
}
export declare function uploadAssetDataOutputToJSON(uploadAssetDataOutput: UploadAssetDataOutput): string;
export declare function uploadAssetDataOutputFromJSON(jsonString: string): SafeParseResult<UploadAssetDataOutput, SDKValidationError>;
/** @internal */
export declare const UploadAssetTask$inboundSchema: z.ZodType<UploadAssetTask, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadAssetTask$Outbound = {
    id: string;
};
/** @internal */
export declare const UploadAssetTask$outboundSchema: z.ZodType<UploadAssetTask$Outbound, z.ZodTypeDef, UploadAssetTask>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadAssetTask$ {
    /** @deprecated use `UploadAssetTask$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadAssetTask, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadAssetTask$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadAssetTask$Outbound, z.ZodTypeDef, UploadAssetTask>;
    /** @deprecated use `UploadAssetTask$Outbound` instead. */
    type Outbound = UploadAssetTask$Outbound;
}
export declare function uploadAssetTaskToJSON(uploadAssetTask: UploadAssetTask): string;
export declare function uploadAssetTaskFromJSON(jsonString: string): SafeParseResult<UploadAssetTask, SDKValidationError>;
/** @internal */
export declare const UploadAssetData$inboundSchema: z.ZodType<UploadAssetData, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadAssetData$Outbound = {
    asset: components.Asset$Outbound;
    task: UploadAssetTask$Outbound;
};
/** @internal */
export declare const UploadAssetData$outboundSchema: z.ZodType<UploadAssetData$Outbound, z.ZodTypeDef, UploadAssetData>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadAssetData$ {
    /** @deprecated use `UploadAssetData$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadAssetData, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadAssetData$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadAssetData$Outbound, z.ZodTypeDef, UploadAssetData>;
    /** @deprecated use `UploadAssetData$Outbound` instead. */
    type Outbound = UploadAssetData$Outbound;
}
export declare function uploadAssetDataToJSON(uploadAssetData: UploadAssetData): string;
export declare function uploadAssetDataFromJSON(jsonString: string): SafeParseResult<UploadAssetData, SDKValidationError>;
/** @internal */
export declare const UploadAssetResponse$inboundSchema: z.ZodType<UploadAssetResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UploadAssetResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    "200_application/json_data"?: UploadAssetData$Outbound | undefined;
    "201_application/json_data"?: UploadAssetDataOutput$Outbound | undefined;
    error?: components.ErrorT$Outbound | undefined;
};
/** @internal */
export declare const UploadAssetResponse$outboundSchema: z.ZodType<UploadAssetResponse$Outbound, z.ZodTypeDef, UploadAssetResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UploadAssetResponse$ {
    /** @deprecated use `UploadAssetResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UploadAssetResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UploadAssetResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UploadAssetResponse$Outbound, z.ZodTypeDef, UploadAssetResponse>;
    /** @deprecated use `UploadAssetResponse$Outbound` instead. */
    type Outbound = UploadAssetResponse$Outbound;
}
export declare function uploadAssetResponseToJSON(uploadAssetResponse: UploadAssetResponse): string;
export declare function uploadAssetResponseFromJSON(jsonString: string): SafeParseResult<UploadAssetResponse, SDKValidationError>;
//# sourceMappingURL=uploadasset.d.ts.map