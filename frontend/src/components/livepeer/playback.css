.playback-error-message {
    padding: 1rem;
    background-color: #fee2e2;
    color: #b91c1c;
    border-radius: 0.25rem;
}

.player {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: transparent;
    z-index: 99999;
}

.play-button {
    position: fixed;
    top: 0;
    left: 0;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
    opacity: 0;
    pointer-events: none;
}

.player-root {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(0,0,0,0.8);
    z-index: 0;
}

.player-container {
    width: 100%;
    height: 100%;
    background: black;
    position: relative;
}

.player-video {
    width: 100%;
    height: 100%;
    max-width: none;
    max-height: none;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
}

/* Mobile-specific adjustments for laptop-recorded streams */
@media (max-width: 768px) {
    .player {
        /* Ensure the player takes full mobile screen */
        width: 100vw;
        height: 100vh;
    }
    
    .player-root {
        /* Ensure the root background covers full mobile screen */
        width: 100vw;
        height: 100vh;
    }
    
    .player-container {
        /* Ensure the container covers full mobile screen */
        width: 100vw;
        height: 100vh;
    }
    
    .player-video {
        /* Force the video to fill the entire mobile screen */
        width: 100vw;
        height: 100vh;
        /* Center the video content and crop if necessary */
        object-position: center;
        /* Ensure it covers the full screen even if it means cropping */
        object-fit: cover;
    }
}

.close-button {
    position: absolute;
    top: 20px;
    right: 20px;
    padding: 4px 8px;
    background: #ff4444;
    border: none;
    color: white;
    border-radius: 8px;
    cursor: pointer;
    z-index: 100000;
}

.controls {
    position: absolute;
    bottom: 10%;
    left: 50%;
    transform: translateX(-50%);
}

.pause-trigger {
    width: 64px;
    height: 64px;
    flex-shrink: 0;
    transition: transform 0.2s ease-in-out;
}

.pause-trigger:hover {
    transform: scale(1.05)
}

.player-icon {
    width: 100%;
    height: 100%;
    color: white;
}

.loading-indicator {
    position: absolute;
    top: 20px;
    left: 20px;
    background: rgba(0,0,0,0.5);
    padding: 8px 16px;
    border-radius: 20px;
    color: white;
    font-size: 14px;
}

.live-indicator-container {
    position: absolute;
    top: 20px;
    right: 20px;
    background: #ff4444;
    padding: 8px 16px;
    border-radius: 20px;
    color: white;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.live-indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: white;
    animation: pulse 2s infinite;
}

.playback-error {
    position: fixed;
    bottom: 20px;
    left: 20px;
    color: red;
    background: rgba(0,0,0,0.5);
    padding: 8px 16px;
    border-radius: 20px;
    z-index: 999999;
}

@keyframes pulse {
    0% {
        opacity: 1;
    }
    50% {
        opacity: 0.5;
    }
    100% {
        opacity: 1;
    }
}

.manual-play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 100000;
    background: rgba(0, 0, 0, 0.7);
    border: none;
    border-radius: 50%;
    width: 80px;
    height: 80px;
    color: white;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    transition: background-color 0.2s ease;
}

.manual-play-button:hover {
    background: rgba(0, 0, 0, 0.9);
}

/* Mobile adjustments for manual play button */
@media (max-width: 768px) {
    .manual-play-button {
        /* Make the play button slightly larger on mobile for better touch interaction */
        width: 100px;
        height: 100px;
        font-size: 32px;
    }
}

/* Override body centering when video player is active */
body:has(.player) {
    display: block !important;
    place-items: unset !important;
}
